;buildInfoPackage: chisel3, version: 3.2.8, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit Top : 
  module Control : 
    input clock : Clock
    input reset : Reset
    output io : {flip opcode : UInt<7>, aluop : UInt<3>, controltransferop : UInt<2>, memop : UInt<2>, op1_src : UInt<1>, op2_src : UInt<2>, writeback_valid : UInt<1>, writeback_src : UInt<2>, validinst : UInt<1>}
    
    node _T = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_1 = eq(UInt<6>("h033"), _T) @[Lookup.scala 31:38]
    node _T_2 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_3 = eq(UInt<5>("h013"), _T_2) @[Lookup.scala 31:38]
    node _T_4 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_5 = eq(UInt<6>("h03b"), _T_4) @[Lookup.scala 31:38]
    node _T_6 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_7 = eq(UInt<5>("h01b"), _T_6) @[Lookup.scala 31:38]
    node _T_8 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_9 = eq(UInt<2>("h03"), _T_8) @[Lookup.scala 31:38]
    node _T_10 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_11 = eq(UInt<6>("h023"), _T_10) @[Lookup.scala 31:38]
    node _T_12 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_13 = eq(UInt<7>("h063"), _T_12) @[Lookup.scala 31:38]
    node _T_14 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_15 = eq(UInt<6>("h037"), _T_14) @[Lookup.scala 31:38]
    node _T_16 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_17 = eq(UInt<5>("h017"), _T_16) @[Lookup.scala 31:38]
    node _T_18 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_19 = eq(UInt<7>("h06f"), _T_18) @[Lookup.scala 31:38]
    node _T_20 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_21 = eq(UInt<7>("h067"), _T_20) @[Lookup.scala 31:38]
    node _T_22 = mux(_T_21, UInt<3>("h05"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_23 = mux(_T_19, UInt<3>("h05"), _T_22) @[Lookup.scala 33:37]
    node _T_24 = mux(_T_17, UInt<3>("h05"), _T_23) @[Lookup.scala 33:37]
    node _T_25 = mux(_T_15, UInt<1>("h00"), _T_24) @[Lookup.scala 33:37]
    node _T_26 = mux(_T_13, UInt<1>("h00"), _T_25) @[Lookup.scala 33:37]
    node _T_27 = mux(_T_11, UInt<3>("h05"), _T_26) @[Lookup.scala 33:37]
    node _T_28 = mux(_T_9, UInt<3>("h05"), _T_27) @[Lookup.scala 33:37]
    node _T_29 = mux(_T_7, UInt<3>("h04"), _T_28) @[Lookup.scala 33:37]
    node _T_30 = mux(_T_5, UInt<2>("h03"), _T_29) @[Lookup.scala 33:37]
    node _T_31 = mux(_T_3, UInt<2>("h02"), _T_30) @[Lookup.scala 33:37]
    node signals_0 = mux(_T_1, UInt<1>("h01"), _T_31) @[Lookup.scala 33:37]
    node _T_32 = mux(_T_21, UInt<2>("h02"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_33 = mux(_T_19, UInt<1>("h01"), _T_32) @[Lookup.scala 33:37]
    node _T_34 = mux(_T_17, UInt<1>("h00"), _T_33) @[Lookup.scala 33:37]
    node _T_35 = mux(_T_15, UInt<1>("h00"), _T_34) @[Lookup.scala 33:37]
    node _T_36 = mux(_T_13, UInt<2>("h03"), _T_35) @[Lookup.scala 33:37]
    node _T_37 = mux(_T_11, UInt<1>("h00"), _T_36) @[Lookup.scala 33:37]
    node _T_38 = mux(_T_9, UInt<1>("h00"), _T_37) @[Lookup.scala 33:37]
    node _T_39 = mux(_T_7, UInt<1>("h00"), _T_38) @[Lookup.scala 33:37]
    node _T_40 = mux(_T_5, UInt<1>("h00"), _T_39) @[Lookup.scala 33:37]
    node _T_41 = mux(_T_3, UInt<1>("h00"), _T_40) @[Lookup.scala 33:37]
    node signals_1 = mux(_T_1, UInt<1>("h00"), _T_41) @[Lookup.scala 33:37]
    node _T_42 = mux(_T_21, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_43 = mux(_T_19, UInt<1>("h00"), _T_42) @[Lookup.scala 33:37]
    node _T_44 = mux(_T_17, UInt<1>("h00"), _T_43) @[Lookup.scala 33:37]
    node _T_45 = mux(_T_15, UInt<1>("h00"), _T_44) @[Lookup.scala 33:37]
    node _T_46 = mux(_T_13, UInt<1>("h00"), _T_45) @[Lookup.scala 33:37]
    node _T_47 = mux(_T_11, UInt<2>("h02"), _T_46) @[Lookup.scala 33:37]
    node _T_48 = mux(_T_9, UInt<1>("h01"), _T_47) @[Lookup.scala 33:37]
    node _T_49 = mux(_T_7, UInt<1>("h00"), _T_48) @[Lookup.scala 33:37]
    node _T_50 = mux(_T_5, UInt<1>("h00"), _T_49) @[Lookup.scala 33:37]
    node _T_51 = mux(_T_3, UInt<1>("h00"), _T_50) @[Lookup.scala 33:37]
    node signals_2 = mux(_T_1, UInt<1>("h00"), _T_51) @[Lookup.scala 33:37]
    node _T_52 = mux(_T_21, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_53 = mux(_T_19, UInt<1>("h01"), _T_52) @[Lookup.scala 33:37]
    node _T_54 = mux(_T_17, UInt<1>("h01"), _T_53) @[Lookup.scala 33:37]
    node _T_55 = mux(_T_15, UInt<1>("h00"), _T_54) @[Lookup.scala 33:37]
    node _T_56 = mux(_T_13, UInt<1>("h00"), _T_55) @[Lookup.scala 33:37]
    node _T_57 = mux(_T_11, UInt<1>("h00"), _T_56) @[Lookup.scala 33:37]
    node _T_58 = mux(_T_9, UInt<1>("h00"), _T_57) @[Lookup.scala 33:37]
    node _T_59 = mux(_T_7, UInt<1>("h00"), _T_58) @[Lookup.scala 33:37]
    node _T_60 = mux(_T_5, UInt<1>("h00"), _T_59) @[Lookup.scala 33:37]
    node _T_61 = mux(_T_3, UInt<1>("h00"), _T_60) @[Lookup.scala 33:37]
    node signals_3 = mux(_T_1, UInt<1>("h00"), _T_61) @[Lookup.scala 33:37]
    node _T_62 = mux(_T_21, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_63 = mux(_T_19, UInt<1>("h01"), _T_62) @[Lookup.scala 33:37]
    node _T_64 = mux(_T_17, UInt<2>("h02"), _T_63) @[Lookup.scala 33:37]
    node _T_65 = mux(_T_15, UInt<1>("h00"), _T_64) @[Lookup.scala 33:37]
    node _T_66 = mux(_T_13, UInt<1>("h00"), _T_65) @[Lookup.scala 33:37]
    node _T_67 = mux(_T_11, UInt<2>("h02"), _T_66) @[Lookup.scala 33:37]
    node _T_68 = mux(_T_9, UInt<2>("h02"), _T_67) @[Lookup.scala 33:37]
    node _T_69 = mux(_T_7, UInt<2>("h02"), _T_68) @[Lookup.scala 33:37]
    node _T_70 = mux(_T_5, UInt<1>("h00"), _T_69) @[Lookup.scala 33:37]
    node _T_71 = mux(_T_3, UInt<2>("h02"), _T_70) @[Lookup.scala 33:37]
    node signals_4 = mux(_T_1, UInt<1>("h00"), _T_71) @[Lookup.scala 33:37]
    node _T_72 = mux(_T_21, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_73 = mux(_T_19, UInt<1>("h01"), _T_72) @[Lookup.scala 33:37]
    node _T_74 = mux(_T_17, UInt<1>("h01"), _T_73) @[Lookup.scala 33:37]
    node _T_75 = mux(_T_15, UInt<1>("h01"), _T_74) @[Lookup.scala 33:37]
    node _T_76 = mux(_T_13, UInt<1>("h00"), _T_75) @[Lookup.scala 33:37]
    node _T_77 = mux(_T_11, UInt<1>("h00"), _T_76) @[Lookup.scala 33:37]
    node _T_78 = mux(_T_9, UInt<1>("h01"), _T_77) @[Lookup.scala 33:37]
    node _T_79 = mux(_T_7, UInt<1>("h01"), _T_78) @[Lookup.scala 33:37]
    node _T_80 = mux(_T_5, UInt<1>("h01"), _T_79) @[Lookup.scala 33:37]
    node _T_81 = mux(_T_3, UInt<1>("h01"), _T_80) @[Lookup.scala 33:37]
    node signals_5 = mux(_T_1, UInt<1>("h01"), _T_81) @[Lookup.scala 33:37]
    node _T_82 = mux(_T_21, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_83 = mux(_T_19, UInt<1>("h00"), _T_82) @[Lookup.scala 33:37]
    node _T_84 = mux(_T_17, UInt<1>("h00"), _T_83) @[Lookup.scala 33:37]
    node _T_85 = mux(_T_15, UInt<1>("h01"), _T_84) @[Lookup.scala 33:37]
    node _T_86 = mux(_T_13, UInt<1>("h00"), _T_85) @[Lookup.scala 33:37]
    node _T_87 = mux(_T_11, UInt<1>("h00"), _T_86) @[Lookup.scala 33:37]
    node _T_88 = mux(_T_9, UInt<2>("h02"), _T_87) @[Lookup.scala 33:37]
    node _T_89 = mux(_T_7, UInt<1>("h00"), _T_88) @[Lookup.scala 33:37]
    node _T_90 = mux(_T_5, UInt<1>("h00"), _T_89) @[Lookup.scala 33:37]
    node _T_91 = mux(_T_3, UInt<1>("h00"), _T_90) @[Lookup.scala 33:37]
    node signals_6 = mux(_T_1, UInt<1>("h00"), _T_91) @[Lookup.scala 33:37]
    node _T_92 = mux(_T_21, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_93 = mux(_T_19, UInt<1>("h01"), _T_92) @[Lookup.scala 33:37]
    node _T_94 = mux(_T_17, UInt<1>("h01"), _T_93) @[Lookup.scala 33:37]
    node _T_95 = mux(_T_15, UInt<1>("h01"), _T_94) @[Lookup.scala 33:37]
    node _T_96 = mux(_T_13, UInt<1>("h01"), _T_95) @[Lookup.scala 33:37]
    node _T_97 = mux(_T_11, UInt<1>("h01"), _T_96) @[Lookup.scala 33:37]
    node _T_98 = mux(_T_9, UInt<1>("h01"), _T_97) @[Lookup.scala 33:37]
    node _T_99 = mux(_T_7, UInt<1>("h01"), _T_98) @[Lookup.scala 33:37]
    node _T_100 = mux(_T_5, UInt<1>("h01"), _T_99) @[Lookup.scala 33:37]
    node _T_101 = mux(_T_3, UInt<1>("h01"), _T_100) @[Lookup.scala 33:37]
    node signals_7 = mux(_T_1, UInt<1>("h01"), _T_101) @[Lookup.scala 33:37]
    io.aluop <= signals_0 @[control.scala 90:24]
    io.controltransferop <= signals_1 @[control.scala 91:24]
    io.memop <= signals_2 @[control.scala 92:24]
    io.op1_src <= signals_3 @[control.scala 93:24]
    io.op2_src <= signals_4 @[control.scala 94:24]
    io.writeback_valid <= signals_5 @[control.scala 95:24]
    io.writeback_src <= signals_6 @[control.scala 96:24]
    io.validinst <= signals_7 @[control.scala 97:24]
    
  module RegisterFile : 
    input clock : Clock
    input reset : Reset
    output io : {flip readreg1 : UInt<5>, flip readreg2 : UInt<5>, flip writereg : UInt<5>, flip writedata : UInt<64>, flip wen : UInt<1>, readdata1 : UInt<64>, readdata2 : UInt<64>}
    
    reg regs : UInt<64>[32], clock @[register-file.scala 53:17]
    when io.wen : @[register-file.scala 56:17]
      regs[io.writereg] <= io.writedata @[register-file.scala 57:23]
      skip @[register-file.scala 56:17]
    io.readdata1 <= regs[io.readreg1] @[register-file.scala 62:16]
    io.readdata2 <= regs[io.readreg2] @[register-file.scala 63:16]
    node _T = eq(io.readreg1, io.writereg) @[register-file.scala 67:23]
    node _T_1 = and(_T, io.wen) @[register-file.scala 67:39]
    when _T_1 : @[register-file.scala 67:50]
      io.readdata1 <= io.writedata @[register-file.scala 68:20]
      skip @[register-file.scala 67:50]
    node _T_2 = eq(io.readreg2, io.writereg) @[register-file.scala 70:23]
    node _T_3 = and(_T_2, io.wen) @[register-file.scala 70:39]
    when _T_3 : @[register-file.scala 70:50]
      io.readdata2 <= io.writedata @[register-file.scala 71:20]
      skip @[register-file.scala 70:50]
    
  module ALUControl : 
    input clock : Clock
    input reset : Reset
    output io : {flip aluop : UInt<3>, flip funct7 : UInt<7>, flip funct3 : UInt<3>, operation : UInt<5>}
    
    io.operation <= UInt<5>("h01f") @[alucontrol.scala 35:16]
    node _T = eq(io.aluop, UInt<1>("h01")) @[alucontrol.scala 36:16]
    when _T : @[alucontrol.scala 36:25]
      node _T_1 = eq(io.funct3, UInt<3>("h07")) @[alucontrol.scala 40:19]
      node _T_2 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 40:46]
      node _T_3 = and(_T_1, _T_2) @[alucontrol.scala 40:33]
      node _T_4 = eq(io.funct3, UInt<1>("h00")) @[alucontrol.scala 41:19]
      node _T_5 = eq(io.funct7, UInt<6>("h020")) @[alucontrol.scala 41:46]
      node _T_6 = and(_T_4, _T_5) @[alucontrol.scala 41:33]
      node _T_7 = eq(io.funct3, UInt<1>("h00")) @[alucontrol.scala 42:19]
      node _T_8 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 42:46]
      node _T_9 = and(_T_7, _T_8) @[alucontrol.scala 42:33]
      node _T_10 = eq(io.funct3, UInt<1>("h01")) @[alucontrol.scala 43:19]
      node _T_11 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 43:46]
      node _T_12 = and(_T_10, _T_11) @[alucontrol.scala 43:33]
      node _T_13 = eq(io.funct3, UInt<1>("h01")) @[alucontrol.scala 44:19]
      node _T_14 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 44:46]
      node _T_15 = and(_T_13, _T_14) @[alucontrol.scala 44:33]
      node _T_16 = eq(io.funct3, UInt<2>("h02")) @[alucontrol.scala 45:19]
      node _T_17 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 45:46]
      node _T_18 = and(_T_16, _T_17) @[alucontrol.scala 45:33]
      node _T_19 = eq(io.funct3, UInt<2>("h02")) @[alucontrol.scala 46:19]
      node _T_20 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 46:46]
      node _T_21 = and(_T_19, _T_20) @[alucontrol.scala 46:33]
      node _T_22 = eq(io.funct3, UInt<2>("h03")) @[alucontrol.scala 47:19]
      node _T_23 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 47:46]
      node _T_24 = and(_T_22, _T_23) @[alucontrol.scala 47:33]
      node _T_25 = eq(io.funct3, UInt<2>("h03")) @[alucontrol.scala 48:19]
      node _T_26 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 48:46]
      node _T_27 = and(_T_25, _T_26) @[alucontrol.scala 48:33]
      node _T_28 = eq(io.funct3, UInt<3>("h04")) @[alucontrol.scala 49:19]
      node _T_29 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 49:46]
      node _T_30 = and(_T_28, _T_29) @[alucontrol.scala 49:33]
      node _T_31 = eq(io.funct3, UInt<3>("h04")) @[alucontrol.scala 50:19]
      node _T_32 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 50:46]
      node _T_33 = and(_T_31, _T_32) @[alucontrol.scala 50:33]
      node _T_34 = eq(io.funct3, UInt<3>("h05")) @[alucontrol.scala 51:19]
      node _T_35 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 51:46]
      node _T_36 = and(_T_34, _T_35) @[alucontrol.scala 51:33]
      node _T_37 = eq(io.funct3, UInt<3>("h05")) @[alucontrol.scala 52:19]
      node _T_38 = eq(io.funct7, UInt<6>("h020")) @[alucontrol.scala 52:46]
      node _T_39 = and(_T_37, _T_38) @[alucontrol.scala 52:33]
      node _T_40 = eq(io.funct3, UInt<3>("h05")) @[alucontrol.scala 53:19]
      node _T_41 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 53:46]
      node _T_42 = and(_T_40, _T_41) @[alucontrol.scala 53:33]
      node _T_43 = eq(io.funct3, UInt<3>("h06")) @[alucontrol.scala 54:19]
      node _T_44 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 54:46]
      node _T_45 = and(_T_43, _T_44) @[alucontrol.scala 54:33]
      node _T_46 = eq(io.funct3, UInt<3>("h06")) @[alucontrol.scala 55:19]
      node _T_47 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 55:46]
      node _T_48 = and(_T_46, _T_47) @[alucontrol.scala 55:33]
      node _T_49 = eq(io.funct3, UInt<1>("h00")) @[alucontrol.scala 56:19]
      node _T_50 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 56:46]
      node _T_51 = and(_T_49, _T_50) @[alucontrol.scala 56:33]
      node _T_52 = eq(io.funct3, UInt<3>("h07")) @[alucontrol.scala 57:19]
      node _T_53 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 57:46]
      node _T_54 = and(_T_52, _T_53) @[alucontrol.scala 57:33]
      node _T_55 = mux(_T_54, UInt<5>("h01b"), UInt<5>("h01f")) @[Mux.scala 87:16]
      node _T_56 = mux(_T_51, UInt<1>("h00"), _T_55) @[Mux.scala 87:16]
      node _T_57 = mux(_T_48, UInt<5>("h01c"), _T_56) @[Mux.scala 87:16]
      node _T_58 = mux(_T_45, UInt<4>("h0e"), _T_57) @[Mux.scala 87:16]
      node _T_59 = mux(_T_42, UInt<4>("h0a"), _T_58) @[Mux.scala 87:16]
      node _T_60 = mux(_T_39, UInt<5>("h010"), _T_59) @[Mux.scala 87:16]
      node _T_61 = mux(_T_36, UInt<5>("h014"), _T_60) @[Mux.scala 87:16]
      node _T_62 = mux(_T_33, UInt<4>("h09"), _T_61) @[Mux.scala 87:16]
      node _T_63 = mux(_T_30, UInt<4>("h0f"), _T_62) @[Mux.scala 87:16]
      node _T_64 = mux(_T_27, UInt<4>("h08"), _T_63) @[Mux.scala 87:16]
      node _T_65 = mux(_T_24, UInt<5>("h017"), _T_64) @[Mux.scala 87:16]
      node _T_66 = mux(_T_21, UInt<5>("h018"), _T_65) @[Mux.scala 87:16]
      node _T_67 = mux(_T_18, UInt<5>("h016"), _T_66) @[Mux.scala 87:16]
      node _T_68 = mux(_T_15, UInt<3>("h07"), _T_67) @[Mux.scala 87:16]
      node _T_69 = mux(_T_12, UInt<5>("h012"), _T_68) @[Mux.scala 87:16]
      node _T_70 = mux(_T_9, UInt<3>("h05"), _T_69) @[Mux.scala 87:16]
      node _T_71 = mux(_T_6, UInt<2>("h02"), _T_70) @[Mux.scala 87:16]
      node _T_72 = mux(_T_3, UInt<4>("h0d"), _T_71) @[Mux.scala 87:16]
      io.operation <= _T_72 @[alucontrol.scala 37:16]
      skip @[alucontrol.scala 36:25]
    else : @[alucontrol.scala 61:30]
      node _T_73 = eq(io.aluop, UInt<2>("h02")) @[alucontrol.scala 61:21]
      when _T_73 : @[alucontrol.scala 61:30]
        node _T_74 = eq(io.funct3, UInt<1>("h00")) @[alucontrol.scala 65:18]
        node _T_75 = eq(io.funct3, UInt<1>("h01")) @[alucontrol.scala 66:19]
        node _T_76 = bits(io.funct7, 6, 1) @[alucontrol.scala 66:45]
        node _T_77 = eq(_T_76, UInt<1>("h00")) @[alucontrol.scala 66:51]
        node _T_78 = and(_T_75, _T_77) @[alucontrol.scala 66:33]
        node _T_79 = eq(io.funct3, UInt<2>("h02")) @[alucontrol.scala 67:18]
        node _T_80 = eq(io.funct3, UInt<2>("h03")) @[alucontrol.scala 68:18]
        node _T_81 = eq(io.funct3, UInt<3>("h04")) @[alucontrol.scala 69:18]
        node _T_82 = eq(io.funct3, UInt<3>("h05")) @[alucontrol.scala 70:19]
        node _T_83 = bits(io.funct7, 6, 1) @[alucontrol.scala 70:45]
        node _T_84 = eq(_T_83, UInt<1>("h00")) @[alucontrol.scala 70:51]
        node _T_85 = and(_T_82, _T_84) @[alucontrol.scala 70:33]
        node _T_86 = eq(io.funct3, UInt<3>("h05")) @[alucontrol.scala 71:19]
        node _T_87 = bits(io.funct7, 6, 1) @[alucontrol.scala 71:45]
        node _T_88 = eq(_T_87, UInt<5>("h010")) @[alucontrol.scala 71:51]
        node _T_89 = and(_T_86, _T_88) @[alucontrol.scala 71:33]
        node _T_90 = eq(io.funct3, UInt<3>("h06")) @[alucontrol.scala 72:18]
        node _T_91 = eq(io.funct3, UInt<3>("h07")) @[alucontrol.scala 73:18]
        node _T_92 = mux(_T_91, UInt<4>("h0d"), UInt<5>("h01f")) @[Mux.scala 87:16]
        node _T_93 = mux(_T_90, UInt<4>("h0e"), _T_92) @[Mux.scala 87:16]
        node _T_94 = mux(_T_89, UInt<5>("h010"), _T_93) @[Mux.scala 87:16]
        node _T_95 = mux(_T_85, UInt<5>("h014"), _T_94) @[Mux.scala 87:16]
        node _T_96 = mux(_T_81, UInt<4>("h0f"), _T_95) @[Mux.scala 87:16]
        node _T_97 = mux(_T_80, UInt<5>("h017"), _T_96) @[Mux.scala 87:16]
        node _T_98 = mux(_T_79, UInt<5>("h016"), _T_97) @[Mux.scala 87:16]
        node _T_99 = mux(_T_78, UInt<5>("h012"), _T_98) @[Mux.scala 87:16]
        node _T_100 = mux(_T_74, UInt<1>("h00"), _T_99) @[Mux.scala 87:16]
        io.operation <= _T_100 @[alucontrol.scala 62:16]
        skip @[alucontrol.scala 61:30]
      else : @[alucontrol.scala 77:30]
        node _T_101 = eq(io.aluop, UInt<2>("h03")) @[alucontrol.scala 77:21]
        when _T_101 : @[alucontrol.scala 77:30]
          node _T_102 = eq(io.funct3, UInt<1>("h00")) @[alucontrol.scala 81:19]
          node _T_103 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 81:46]
          node _T_104 = and(_T_102, _T_103) @[alucontrol.scala 81:33]
          node _T_105 = eq(io.funct3, UInt<1>("h00")) @[alucontrol.scala 82:19]
          node _T_106 = eq(io.funct7, UInt<6>("h020")) @[alucontrol.scala 82:46]
          node _T_107 = and(_T_105, _T_106) @[alucontrol.scala 82:33]
          node _T_108 = eq(io.funct3, UInt<1>("h00")) @[alucontrol.scala 83:19]
          node _T_109 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 83:46]
          node _T_110 = and(_T_108, _T_109) @[alucontrol.scala 83:33]
          node _T_111 = eq(io.funct3, UInt<1>("h01")) @[alucontrol.scala 84:19]
          node _T_112 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 84:46]
          node _T_113 = and(_T_111, _T_112) @[alucontrol.scala 84:33]
          node _T_114 = eq(io.funct3, UInt<3>("h04")) @[alucontrol.scala 85:19]
          node _T_115 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 85:46]
          node _T_116 = and(_T_114, _T_115) @[alucontrol.scala 85:33]
          node _T_117 = eq(io.funct3, UInt<3>("h05")) @[alucontrol.scala 86:19]
          node _T_118 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 86:46]
          node _T_119 = and(_T_117, _T_118) @[alucontrol.scala 86:33]
          node _T_120 = eq(io.funct3, UInt<3>("h05")) @[alucontrol.scala 87:19]
          node _T_121 = eq(io.funct7, UInt<6>("h020")) @[alucontrol.scala 87:46]
          node _T_122 = and(_T_120, _T_121) @[alucontrol.scala 87:33]
          node _T_123 = eq(io.funct3, UInt<3>("h05")) @[alucontrol.scala 88:19]
          node _T_124 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 88:46]
          node _T_125 = and(_T_123, _T_124) @[alucontrol.scala 88:33]
          node _T_126 = eq(io.funct3, UInt<3>("h06")) @[alucontrol.scala 89:19]
          node _T_127 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 89:46]
          node _T_128 = and(_T_126, _T_127) @[alucontrol.scala 89:33]
          node _T_129 = eq(io.funct3, UInt<3>("h07")) @[alucontrol.scala 90:19]
          node _T_130 = eq(io.funct7, UInt<1>("h01")) @[alucontrol.scala 90:46]
          node _T_131 = and(_T_129, _T_130) @[alucontrol.scala 90:33]
          node _T_132 = mux(_T_131, UInt<5>("h019"), UInt<5>("h01f")) @[Mux.scala 87:16]
          node _T_133 = mux(_T_128, UInt<5>("h01a"), _T_132) @[Mux.scala 87:16]
          node _T_134 = mux(_T_125, UInt<4>("h0c"), _T_133) @[Mux.scala 87:16]
          node _T_135 = mux(_T_122, UInt<5>("h011"), _T_134) @[Mux.scala 87:16]
          node _T_136 = mux(_T_119, UInt<5>("h015"), _T_135) @[Mux.scala 87:16]
          node _T_137 = mux(_T_116, UInt<4>("h0b"), _T_136) @[Mux.scala 87:16]
          node _T_138 = mux(_T_113, UInt<5>("h013"), _T_137) @[Mux.scala 87:16]
          node _T_139 = mux(_T_110, UInt<3>("h06"), _T_138) @[Mux.scala 87:16]
          node _T_140 = mux(_T_107, UInt<3>("h04"), _T_139) @[Mux.scala 87:16]
          node _T_141 = mux(_T_104, UInt<1>("h01"), _T_140) @[Mux.scala 87:16]
          io.operation <= _T_141 @[alucontrol.scala 78:16]
          skip @[alucontrol.scala 77:30]
        else : @[alucontrol.scala 94:30]
          node _T_142 = eq(io.aluop, UInt<3>("h04")) @[alucontrol.scala 94:21]
          when _T_142 : @[alucontrol.scala 94:30]
            node _T_143 = eq(io.funct3, UInt<1>("h00")) @[alucontrol.scala 98:18]
            node _T_144 = eq(io.funct3, UInt<1>("h01")) @[alucontrol.scala 99:19]
            node _T_145 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 99:46]
            node _T_146 = and(_T_144, _T_145) @[alucontrol.scala 99:33]
            node _T_147 = eq(io.funct3, UInt<3>("h05")) @[alucontrol.scala 100:19]
            node _T_148 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 100:46]
            node _T_149 = and(_T_147, _T_148) @[alucontrol.scala 100:33]
            node _T_150 = eq(io.funct3, UInt<3>("h05")) @[alucontrol.scala 101:19]
            node _T_151 = eq(io.funct7, UInt<6>("h020")) @[alucontrol.scala 101:46]
            node _T_152 = and(_T_150, _T_151) @[alucontrol.scala 101:33]
            node _T_153 = mux(_T_152, UInt<5>("h011"), UInt<5>("h01f")) @[Mux.scala 87:16]
            node _T_154 = mux(_T_149, UInt<5>("h015"), _T_153) @[Mux.scala 87:16]
            node _T_155 = mux(_T_146, UInt<5>("h013"), _T_154) @[Mux.scala 87:16]
            node _T_156 = mux(_T_143, UInt<1>("h01"), _T_155) @[Mux.scala 87:16]
            io.operation <= _T_156 @[alucontrol.scala 95:16]
            skip @[alucontrol.scala 94:30]
          else : @[alucontrol.scala 105:30]
            node _T_157 = eq(io.aluop, UInt<3>("h05")) @[alucontrol.scala 105:21]
            when _T_157 : @[alucontrol.scala 105:30]
              io.operation <= UInt<1>("h00") @[alucontrol.scala 106:16]
              skip @[alucontrol.scala 105:30]
            else : @[alucontrol.scala 108:12]
              io.operation <= UInt<5>("h01f") @[alucontrol.scala 109:16]
              skip @[alucontrol.scala 108:12]
    
  module ALU : 
    input clock : Clock
    input reset : Reset
    output io : {flip operation : UInt<5>, flip operand1 : UInt<64>, flip operand2 : UInt<64>, result : UInt<64>}
    
    node operand1_32 = bits(io.operand1, 31, 0) @[alu.scala 47:32]
    node operand2_32 = bits(io.operand2, 31, 0) @[alu.scala 48:32]
    io.result <= UInt<1>("h00") @[alu.scala 50:13]
    node _T = eq(io.operation, UInt<1>("h00")) @[alu.scala 52:22]
    when _T : @[alu.scala 52:38]
      node _T_1 = add(io.operand1, io.operand2) @[alu.scala 53:30]
      node _T_2 = tail(_T_1, 1) @[alu.scala 53:30]
      io.result <= _T_2 @[alu.scala 53:15]
      skip @[alu.scala 52:38]
    else : @[alu.scala 55:43]
      node _T_3 = eq(io.operation, UInt<1>("h01")) @[alu.scala 55:27]
      when _T_3 : @[alu.scala 55:43]
        node _T_4 = add(operand1_32, operand2_32) @[alu.scala 56:47]
        node _T_5 = tail(_T_4, 1) @[alu.scala 56:47]
        node _T_6 = bits(_T_5, 31, 31) @[alu.scala 46:61]
        node _T_7 = bits(_T_6, 0, 0) @[Bitwise.scala 72:15]
        node _T_8 = mux(_T_7, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
        node _T_9 = bits(_T_5, 31, 0) @[alu.scala 46:73]
        node _T_10 = cat(_T_8, _T_9) @[Cat.scala 30:58]
        io.result <= _T_10 @[alu.scala 56:15]
        skip @[alu.scala 55:43]
      else : @[alu.scala 58:43]
        node _T_11 = eq(io.operation, UInt<2>("h02")) @[alu.scala 58:27]
        when _T_11 : @[alu.scala 58:43]
          node _T_12 = sub(io.operand1, io.operand2) @[alu.scala 59:30]
          node _T_13 = tail(_T_12, 1) @[alu.scala 59:30]
          io.result <= _T_13 @[alu.scala 59:15]
          skip @[alu.scala 58:43]
        else : @[alu.scala 61:43]
          node _T_14 = eq(io.operation, UInt<3>("h04")) @[alu.scala 61:27]
          when _T_14 : @[alu.scala 61:43]
            node _T_15 = sub(operand1_32, operand2_32) @[alu.scala 62:47]
            node _T_16 = tail(_T_15, 1) @[alu.scala 62:47]
            node _T_17 = bits(_T_16, 31, 31) @[alu.scala 46:61]
            node _T_18 = bits(_T_17, 0, 0) @[Bitwise.scala 72:15]
            node _T_19 = mux(_T_18, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
            node _T_20 = bits(_T_16, 31, 0) @[alu.scala 46:73]
            node _T_21 = cat(_T_19, _T_20) @[Cat.scala 30:58]
            io.result <= _T_21 @[alu.scala 62:15]
            skip @[alu.scala 61:43]
          else : @[alu.scala 64:43]
            node _T_22 = eq(io.operation, UInt<3>("h05")) @[alu.scala 64:27]
            when _T_22 : @[alu.scala 64:43]
              node _T_23 = mul(io.operand1, io.operand2) @[alu.scala 65:30]
              io.result <= _T_23 @[alu.scala 65:15]
              skip @[alu.scala 64:43]
            else : @[alu.scala 67:43]
              node _T_24 = eq(io.operation, UInt<3>("h06")) @[alu.scala 67:27]
              when _T_24 : @[alu.scala 67:43]
                wire _T_25 : SInt<32> @[alu.scala 68:26]
                node _T_26 = asSInt(operand1_32) @[alu.scala 69:31]
                node _T_27 = asSInt(operand2_32) @[alu.scala 69:52]
                node _T_28 = mul(_T_26, _T_27) @[alu.scala 69:38]
                _T_25 <= _T_28 @[alu.scala 69:16]
                node _T_29 = asUInt(_T_25) @[alu.scala 70:46]
                node _T_30 = bits(_T_29, 31, 31) @[alu.scala 46:61]
                node _T_31 = bits(_T_30, 0, 0) @[Bitwise.scala 72:15]
                node _T_32 = mux(_T_31, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                node _T_33 = bits(_T_29, 31, 0) @[alu.scala 46:73]
                node _T_34 = cat(_T_32, _T_33) @[Cat.scala 30:58]
                io.result <= _T_34 @[alu.scala 70:15]
                skip @[alu.scala 67:43]
              else : @[alu.scala 72:43]
                node _T_35 = eq(io.operation, UInt<3>("h07")) @[alu.scala 72:27]
                when _T_35 : @[alu.scala 72:43]
                  node _T_36 = eq(io.operand1, UInt<1>("h00")) @[alu.scala 74:24]
                  node _T_37 = eq(io.operand2, UInt<1>("h00")) @[alu.scala 74:49]
                  node _T_38 = or(_T_36, _T_37) @[alu.scala 74:33]
                  when _T_38 : @[alu.scala 74:59]
                    io.result <= UInt<1>("h00") @[alu.scala 75:17]
                    skip @[alu.scala 74:59]
                  else : @[alu.scala 77:16]
                    node _T_39 = asSInt(io.operand1) @[alu.scala 78:45]
                    node _T_40 = lt(_T_39, asSInt(UInt<1>("h00"))) @[alu.scala 78:55]
                    node _T_41 = sub(asSInt(UInt<1>("h00")), _T_39) @[alu.scala 78:55]
                    node _T_42 = tail(_T_41, 1) @[alu.scala 78:55]
                    node _T_43 = asSInt(_T_42) @[alu.scala 78:55]
                    node _T_44 = mux(_T_40, _T_43, _T_39) @[alu.scala 78:55]
                    node _T_45 = asUInt(_T_44) @[alu.scala 78:58]
                    node _T_46 = asSInt(io.operand2) @[alu.scala 78:78]
                    node _T_47 = lt(_T_46, asSInt(UInt<1>("h00"))) @[alu.scala 78:88]
                    node _T_48 = sub(asSInt(UInt<1>("h00")), _T_46) @[alu.scala 78:88]
                    node _T_49 = tail(_T_48, 1) @[alu.scala 78:88]
                    node _T_50 = asSInt(_T_49) @[alu.scala 78:88]
                    node _T_51 = mux(_T_47, _T_50, _T_46) @[alu.scala 78:88]
                    node _T_52 = asUInt(_T_51) @[alu.scala 78:91]
                    node _T_53 = bits(_T_45, 63, 32) @[alu.scala 32:16]
                    node _T_54 = bits(_T_45, 31, 0) @[alu.scala 33:16]
                    node _T_55 = bits(_T_52, 63, 32) @[alu.scala 34:16]
                    node _T_56 = bits(_T_52, 31, 0) @[alu.scala 35:16]
                    wire _T_57 : UInt<64> @[alu.scala 36:21]
                    node _T_58 = mul(_T_53, _T_55) @[alu.scala 37:15]
                    node _T_59 = mul(_T_53, _T_56) @[alu.scala 37:23]
                    node _T_60 = shr(_T_59, 32) @[alu.scala 37:27]
                    node _T_61 = add(_T_58, _T_60) @[alu.scala 37:18]
                    node _T_62 = tail(_T_61, 1) @[alu.scala 37:18]
                    node _T_63 = mul(_T_54, _T_55) @[alu.scala 37:39]
                    node _T_64 = shr(_T_63, 32) @[alu.scala 37:43]
                    node _T_65 = add(_T_62, _T_64) @[alu.scala 37:34]
                    node _T_66 = tail(_T_65, 1) @[alu.scala 37:34]
                    _T_57 <= _T_66 @[alu.scala 37:11]
                    wire _T_67 : UInt<64> @[alu.scala 38:20]
                    node _T_68 = mul(_T_53, _T_56) @[alu.scala 39:16]
                    node _T_69 = shl(UInt<1>("h01"), 32) @[alu.scala 39:27]
                    node _T_70 = rem(_T_68, _T_69) @[alu.scala 39:20]
                    node _T_71 = mul(_T_54, _T_55) @[alu.scala 39:39]
                    node _T_72 = shl(UInt<1>("h01"), 32) @[alu.scala 39:50]
                    node _T_73 = rem(_T_71, _T_72) @[alu.scala 39:43]
                    node _T_74 = add(_T_70, _T_73) @[alu.scala 39:35]
                    node _T_75 = tail(_T_74, 1) @[alu.scala 39:35]
                    node _T_76 = mul(_T_54, _T_56) @[alu.scala 39:62]
                    node _T_77 = shr(_T_76, 32) @[alu.scala 39:66]
                    node _T_78 = add(_T_75, _T_77) @[alu.scala 39:57]
                    node _T_79 = tail(_T_78, 1) @[alu.scala 39:57]
                    _T_67 <= _T_79 @[alu.scala 39:10]
                    wire _T_80 : UInt<64> @[alu.scala 40:22]
                    node _T_81 = shr(_T_67, 32) @[alu.scala 41:29]
                    node _T_82 = add(_T_57, _T_81) @[alu.scala 41:21]
                    node _T_83 = tail(_T_82, 1) @[alu.scala 41:21]
                    _T_80 <= _T_83 @[alu.scala 41:12]
                    node _T_84 = asSInt(io.operand1) @[alu.scala 79:27]
                    node _T_85 = gt(_T_84, asSInt(UInt<1>("h00"))) @[alu.scala 79:34]
                    node _T_86 = asSInt(io.operand2) @[alu.scala 79:57]
                    node _T_87 = gt(_T_86, asSInt(UInt<1>("h00"))) @[alu.scala 79:64]
                    node _T_88 = and(_T_85, _T_87) @[alu.scala 79:41]
                    node _T_89 = asSInt(io.operand1) @[alu.scala 79:90]
                    node _T_90 = leq(_T_89, asSInt(UInt<1>("h00"))) @[alu.scala 79:97]
                    node _T_91 = asSInt(io.operand2) @[alu.scala 79:121]
                    node _T_92 = leq(_T_91, asSInt(UInt<1>("h00"))) @[alu.scala 79:128]
                    node _T_93 = and(_T_90, _T_92) @[alu.scala 79:105]
                    node _T_94 = or(_T_88, _T_93) @[alu.scala 79:72]
                    when _T_94 : @[alu.scala 79:139]
                      io.result <= _T_80 @[alu.scala 80:19]
                      skip @[alu.scala 79:139]
                    else : @[alu.scala 82:18]
                      node _T_95 = add(_T_80, UInt<1>("h01")) @[alu.scala 83:32]
                      node _T_96 = tail(_T_95, 1) @[alu.scala 83:32]
                      node _T_97 = sub(UInt<1>("h00"), _T_96) @[alu.scala 83:23]
                      node _T_98 = tail(_T_97, 1) @[alu.scala 83:23]
                      io.result <= _T_98 @[alu.scala 83:19]
                      skip @[alu.scala 82:18]
                    skip @[alu.scala 77:16]
                  skip @[alu.scala 72:43]
                else : @[alu.scala 91:43]
                  node _T_99 = eq(io.operation, UInt<4>("h08")) @[alu.scala 91:27]
                  when _T_99 : @[alu.scala 91:43]
                    node _T_100 = bits(io.operand1, 63, 32) @[alu.scala 32:16]
                    node _T_101 = bits(io.operand1, 31, 0) @[alu.scala 33:16]
                    node _T_102 = bits(io.operand2, 63, 32) @[alu.scala 34:16]
                    node _T_103 = bits(io.operand2, 31, 0) @[alu.scala 35:16]
                    wire _T_104 : UInt<64> @[alu.scala 36:21]
                    node _T_105 = mul(_T_100, _T_102) @[alu.scala 37:15]
                    node _T_106 = mul(_T_100, _T_103) @[alu.scala 37:23]
                    node _T_107 = shr(_T_106, 32) @[alu.scala 37:27]
                    node _T_108 = add(_T_105, _T_107) @[alu.scala 37:18]
                    node _T_109 = tail(_T_108, 1) @[alu.scala 37:18]
                    node _T_110 = mul(_T_101, _T_102) @[alu.scala 37:39]
                    node _T_111 = shr(_T_110, 32) @[alu.scala 37:43]
                    node _T_112 = add(_T_109, _T_111) @[alu.scala 37:34]
                    node _T_113 = tail(_T_112, 1) @[alu.scala 37:34]
                    _T_104 <= _T_113 @[alu.scala 37:11]
                    wire _T_114 : UInt<64> @[alu.scala 38:20]
                    node _T_115 = mul(_T_100, _T_103) @[alu.scala 39:16]
                    node _T_116 = shl(UInt<1>("h01"), 32) @[alu.scala 39:27]
                    node _T_117 = rem(_T_115, _T_116) @[alu.scala 39:20]
                    node _T_118 = mul(_T_101, _T_102) @[alu.scala 39:39]
                    node _T_119 = shl(UInt<1>("h01"), 32) @[alu.scala 39:50]
                    node _T_120 = rem(_T_118, _T_119) @[alu.scala 39:43]
                    node _T_121 = add(_T_117, _T_120) @[alu.scala 39:35]
                    node _T_122 = tail(_T_121, 1) @[alu.scala 39:35]
                    node _T_123 = mul(_T_101, _T_103) @[alu.scala 39:62]
                    node _T_124 = shr(_T_123, 32) @[alu.scala 39:66]
                    node _T_125 = add(_T_122, _T_124) @[alu.scala 39:57]
                    node _T_126 = tail(_T_125, 1) @[alu.scala 39:57]
                    _T_114 <= _T_126 @[alu.scala 39:10]
                    wire _T_127 : UInt<64> @[alu.scala 40:22]
                    node _T_128 = shr(_T_114, 32) @[alu.scala 41:29]
                    node _T_129 = add(_T_104, _T_128) @[alu.scala 41:21]
                    node _T_130 = tail(_T_129, 1) @[alu.scala 41:21]
                    _T_127 <= _T_130 @[alu.scala 41:12]
                    io.result <= _T_127 @[alu.scala 92:15]
                    skip @[alu.scala 91:43]
                  else : @[alu.scala 98:43]
                    node _T_131 = eq(io.operation, UInt<4>("h09")) @[alu.scala 98:27]
                    when _T_131 : @[alu.scala 98:43]
                      node _T_132 = eq(io.operand2, UInt<1>("h00")) @[alu.scala 99:23]
                      when _T_132 : @[alu.scala 99:32]
                        node _T_133 = asUInt(asSInt(UInt<64>("h0ffffffffffffffff"))) @[alu.scala 100:33]
                        io.result <= _T_133 @[alu.scala 100:17]
                        skip @[alu.scala 99:32]
                      else : @[alu.scala 102:94]
                        node _T_134 = asSInt(io.operand1) @[alu.scala 102:29]
                        node _T_135 = shl(asSInt(UInt<64>("h0ffffffffffffffff")), 63) @[alu.scala 102:53]
                        node _T_136 = eq(_T_134, _T_135) @[alu.scala 102:36]
                        node _T_137 = asSInt(io.operand2) @[alu.scala 102:76]
                        node _T_138 = eq(_T_137, asSInt(UInt<1>("h01"))) @[alu.scala 102:83]
                        node _T_139 = and(_T_136, _T_138) @[alu.scala 102:60]
                        when _T_139 : @[alu.scala 102:94]
                          io.result <= io.operand1 @[alu.scala 103:17]
                          skip @[alu.scala 102:94]
                        else : @[alu.scala 105:16]
                          node _T_140 = asSInt(io.operand1) @[alu.scala 107:33]
                          node _T_141 = asSInt(io.operand2) @[alu.scala 107:54]
                          node _T_142 = div(_T_140, _T_141) @[alu.scala 107:40]
                          node _T_143 = asUInt(_T_142) @[alu.scala 107:62]
                          io.result <= _T_143 @[alu.scala 107:17]
                          skip @[alu.scala 105:16]
                      skip @[alu.scala 98:43]
                    else : @[alu.scala 110:43]
                      node _T_144 = eq(io.operation, UInt<4>("h0a")) @[alu.scala 110:27]
                      when _T_144 : @[alu.scala 110:43]
                        node _T_145 = eq(io.operand2, UInt<1>("h00")) @[alu.scala 111:23]
                        when _T_145 : @[alu.scala 111:32]
                          node _T_146 = asUInt(asSInt(UInt<64>("h0ffffffffffffffff"))) @[alu.scala 112:33]
                          io.result <= _T_146 @[alu.scala 112:17]
                          skip @[alu.scala 111:32]
                        else : @[alu.scala 114:16]
                          node _T_147 = div(io.operand1, io.operand2) @[alu.scala 115:32]
                          io.result <= _T_147 @[alu.scala 115:17]
                          skip @[alu.scala 114:16]
                        skip @[alu.scala 110:43]
                      else : @[alu.scala 118:43]
                        node _T_148 = eq(io.operation, UInt<4>("h0b")) @[alu.scala 118:27]
                        when _T_148 : @[alu.scala 118:43]
                          node _T_149 = eq(operand2_32, UInt<1>("h00")) @[alu.scala 119:23]
                          when _T_149 : @[alu.scala 119:32]
                            node _T_150 = asUInt(asSInt(UInt<64>("h0ffffffffffffffff"))) @[alu.scala 120:33]
                            io.result <= _T_150 @[alu.scala 120:17]
                            skip @[alu.scala 119:32]
                          else : @[alu.scala 122:96]
                            node _T_151 = asSInt(operand1_32) @[alu.scala 122:29]
                            node _T_152 = shl(asSInt(UInt<32>("h0ffffffff")), 31) @[alu.scala 122:54]
                            node _T_153 = eq(_T_151, _T_152) @[alu.scala 122:36]
                            node _T_154 = asSInt(operand2_32) @[alu.scala 122:78]
                            node _T_155 = eq(_T_154, asSInt(UInt<1>("h01"))) @[alu.scala 122:85]
                            node _T_156 = and(_T_153, _T_155) @[alu.scala 122:62]
                            when _T_156 : @[alu.scala 122:96]
                              node _T_157 = bits(operand1_32, 31, 31) @[alu.scala 46:61]
                              node _T_158 = bits(_T_157, 0, 0) @[Bitwise.scala 72:15]
                              node _T_159 = mux(_T_158, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                              node _T_160 = bits(operand1_32, 31, 0) @[alu.scala 46:73]
                              node _T_161 = cat(_T_159, _T_160) @[Cat.scala 30:58]
                              io.result <= _T_161 @[alu.scala 123:17]
                              skip @[alu.scala 122:96]
                            else : @[alu.scala 125:16]
                              node _T_162 = asSInt(operand1_32) @[alu.scala 126:50]
                              node _T_163 = asSInt(operand2_32) @[alu.scala 126:71]
                              node _T_164 = div(_T_162, _T_163) @[alu.scala 126:57]
                              node _T_165 = asUInt(_T_164) @[alu.scala 126:79]
                              node _T_166 = bits(_T_165, 31, 31) @[alu.scala 46:61]
                              node _T_167 = bits(_T_166, 0, 0) @[Bitwise.scala 72:15]
                              node _T_168 = mux(_T_167, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                              node _T_169 = bits(_T_165, 31, 0) @[alu.scala 46:73]
                              node _T_170 = cat(_T_168, _T_169) @[Cat.scala 30:58]
                              io.result <= _T_170 @[alu.scala 126:17]
                              skip @[alu.scala 125:16]
                          skip @[alu.scala 118:43]
                        else : @[alu.scala 129:43]
                          node _T_171 = eq(io.operation, UInt<4>("h0c")) @[alu.scala 129:27]
                          when _T_171 : @[alu.scala 129:43]
                            node _T_172 = eq(operand2_32, UInt<1>("h00")) @[alu.scala 130:23]
                            when _T_172 : @[alu.scala 130:32]
                              node _T_173 = asUInt(asSInt(UInt<64>("h0ffffffffffffffff"))) @[alu.scala 131:33]
                              io.result <= _T_173 @[alu.scala 131:17]
                              skip @[alu.scala 130:32]
                            else : @[alu.scala 133:16]
                              node _T_174 = div(operand1_32, operand2_32) @[alu.scala 134:49]
                              node _T_175 = bits(_T_174, 31, 31) @[alu.scala 46:61]
                              node _T_176 = bits(_T_175, 0, 0) @[Bitwise.scala 72:15]
                              node _T_177 = mux(_T_176, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                              node _T_178 = bits(_T_174, 31, 0) @[alu.scala 46:73]
                              node _T_179 = cat(_T_177, _T_178) @[Cat.scala 30:58]
                              io.result <= _T_179 @[alu.scala 134:17]
                              skip @[alu.scala 133:16]
                            skip @[alu.scala 129:43]
                          else : @[alu.scala 137:43]
                            node _T_180 = eq(io.operation, UInt<4>("h0d")) @[alu.scala 137:27]
                            when _T_180 : @[alu.scala 137:43]
                              node _T_181 = and(io.operand1, io.operand2) @[alu.scala 138:30]
                              io.result <= _T_181 @[alu.scala 138:15]
                              skip @[alu.scala 137:43]
                            else : @[alu.scala 140:43]
                              node _T_182 = eq(io.operation, UInt<4>("h0e")) @[alu.scala 140:27]
                              when _T_182 : @[alu.scala 140:43]
                                node _T_183 = or(io.operand1, io.operand2) @[alu.scala 141:30]
                                io.result <= _T_183 @[alu.scala 141:15]
                                skip @[alu.scala 140:43]
                              else : @[alu.scala 143:43]
                                node _T_184 = eq(io.operation, UInt<4>("h0f")) @[alu.scala 143:27]
                                when _T_184 : @[alu.scala 143:43]
                                  node _T_185 = xor(io.operand1, io.operand2) @[alu.scala 144:30]
                                  io.result <= _T_185 @[alu.scala 144:15]
                                  skip @[alu.scala 143:43]
                                else : @[alu.scala 146:43]
                                  node _T_186 = eq(io.operation, UInt<5>("h010")) @[alu.scala 146:27]
                                  when _T_186 : @[alu.scala 146:43]
                                    node _T_187 = asSInt(io.operand1) @[alu.scala 147:31]
                                    node _T_188 = bits(io.operand2, 5, 0) @[alu.scala 147:52]
                                    node _T_189 = dshr(_T_187, _T_188) @[alu.scala 147:38]
                                    node _T_190 = asUInt(_T_189) @[alu.scala 147:60]
                                    io.result <= _T_190 @[alu.scala 147:15]
                                    skip @[alu.scala 146:43]
                                  else : @[alu.scala 149:43]
                                    node _T_191 = eq(io.operation, UInt<5>("h011")) @[alu.scala 149:27]
                                    when _T_191 : @[alu.scala 149:43]
                                      node _T_192 = asSInt(operand1_32) @[alu.scala 150:48]
                                      node _T_193 = bits(operand2_32, 4, 0) @[alu.scala 150:69]
                                      node _T_194 = dshr(_T_192, _T_193) @[alu.scala 150:55]
                                      node _T_195 = asUInt(_T_194) @[alu.scala 150:77]
                                      node _T_196 = bits(_T_195, 31, 31) @[alu.scala 46:61]
                                      node _T_197 = bits(_T_196, 0, 0) @[Bitwise.scala 72:15]
                                      node _T_198 = mux(_T_197, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                                      node _T_199 = bits(_T_195, 31, 0) @[alu.scala 46:73]
                                      node _T_200 = cat(_T_198, _T_199) @[Cat.scala 30:58]
                                      io.result <= _T_200 @[alu.scala 150:15]
                                      skip @[alu.scala 149:43]
                                    else : @[alu.scala 153:43]
                                      node _T_201 = eq(io.operation, UInt<5>("h012")) @[alu.scala 153:27]
                                      when _T_201 : @[alu.scala 153:43]
                                        node _T_202 = bits(io.operand2, 5, 0) @[alu.scala 154:44]
                                        node _T_203 = dshl(io.operand1, _T_202) @[alu.scala 154:30]
                                        io.result <= _T_203 @[alu.scala 154:15]
                                        skip @[alu.scala 153:43]
                                      else : @[alu.scala 156:43]
                                        node _T_204 = eq(io.operation, UInt<5>("h013")) @[alu.scala 156:27]
                                        when _T_204 : @[alu.scala 156:43]
                                          node _T_205 = bits(operand2_32, 4, 0) @[alu.scala 157:61]
                                          node _T_206 = dshl(operand1_32, _T_205) @[alu.scala 157:47]
                                          node _T_207 = bits(_T_206, 31, 31) @[alu.scala 46:61]
                                          node _T_208 = bits(_T_207, 0, 0) @[Bitwise.scala 72:15]
                                          node _T_209 = mux(_T_208, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                                          node _T_210 = bits(_T_206, 31, 0) @[alu.scala 46:73]
                                          node _T_211 = cat(_T_209, _T_210) @[Cat.scala 30:58]
                                          io.result <= _T_211 @[alu.scala 157:15]
                                          skip @[alu.scala 156:43]
                                        else : @[alu.scala 159:43]
                                          node _T_212 = eq(io.operation, UInt<5>("h014")) @[alu.scala 159:27]
                                          when _T_212 : @[alu.scala 159:43]
                                            node _T_213 = bits(io.operand2, 5, 0) @[alu.scala 160:44]
                                            node _T_214 = dshr(io.operand1, _T_213) @[alu.scala 160:30]
                                            io.result <= _T_214 @[alu.scala 160:15]
                                            skip @[alu.scala 159:43]
                                          else : @[alu.scala 162:43]
                                            node _T_215 = eq(io.operation, UInt<5>("h015")) @[alu.scala 162:27]
                                            when _T_215 : @[alu.scala 162:43]
                                              node _T_216 = bits(operand2_32, 4, 0) @[alu.scala 163:61]
                                              node _T_217 = dshr(operand1_32, _T_216) @[alu.scala 163:47]
                                              node _T_218 = bits(_T_217, 31, 31) @[alu.scala 46:61]
                                              node _T_219 = bits(_T_218, 0, 0) @[Bitwise.scala 72:15]
                                              node _T_220 = mux(_T_219, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                                              node _T_221 = bits(_T_217, 31, 0) @[alu.scala 46:73]
                                              node _T_222 = cat(_T_220, _T_221) @[Cat.scala 30:58]
                                              io.result <= _T_222 @[alu.scala 163:15]
                                              skip @[alu.scala 162:43]
                                            else : @[alu.scala 165:43]
                                              node _T_223 = eq(io.operation, UInt<5>("h016")) @[alu.scala 165:27]
                                              when _T_223 : @[alu.scala 165:43]
                                                node _T_224 = asSInt(io.operand1) @[alu.scala 166:31]
                                                node _T_225 = asSInt(io.operand2) @[alu.scala 166:52]
                                                node _T_226 = lt(_T_224, _T_225) @[alu.scala 166:38]
                                                io.result <= _T_226 @[alu.scala 166:15]
                                                skip @[alu.scala 165:43]
                                              else : @[alu.scala 168:43]
                                                node _T_227 = eq(io.operation, UInt<5>("h017")) @[alu.scala 168:27]
                                                when _T_227 : @[alu.scala 168:43]
                                                  node _T_228 = lt(io.operand1, io.operand2) @[alu.scala 169:38]
                                                  io.result <= _T_228 @[alu.scala 169:15]
                                                  skip @[alu.scala 168:43]
                                                else : @[alu.scala 171:43]
                                                  node _T_229 = eq(io.operation, UInt<5>("h018")) @[alu.scala 171:27]
                                                  when _T_229 : @[alu.scala 171:43]
                                                    node _T_230 = eq(io.operand1, UInt<1>("h00")) @[alu.scala 173:24]
                                                    node _T_231 = eq(io.operand2, UInt<1>("h00")) @[alu.scala 173:49]
                                                    node _T_232 = or(_T_230, _T_231) @[alu.scala 173:33]
                                                    when _T_232 : @[alu.scala 173:59]
                                                      io.result <= UInt<1>("h00") @[alu.scala 174:17]
                                                      skip @[alu.scala 173:59]
                                                    else : @[alu.scala 176:16]
                                                      node _T_233 = asSInt(io.operand1) @[alu.scala 177:45]
                                                      node _T_234 = lt(_T_233, asSInt(UInt<1>("h00"))) @[alu.scala 177:55]
                                                      node _T_235 = sub(asSInt(UInt<1>("h00")), _T_233) @[alu.scala 177:55]
                                                      node _T_236 = tail(_T_235, 1) @[alu.scala 177:55]
                                                      node _T_237 = asSInt(_T_236) @[alu.scala 177:55]
                                                      node _T_238 = mux(_T_234, _T_237, _T_233) @[alu.scala 177:55]
                                                      node _T_239 = asUInt(_T_238) @[alu.scala 177:58]
                                                      node _T_240 = bits(_T_239, 63, 32) @[alu.scala 32:16]
                                                      node _T_241 = bits(_T_239, 31, 0) @[alu.scala 33:16]
                                                      node _T_242 = bits(io.operand2, 63, 32) @[alu.scala 34:16]
                                                      node _T_243 = bits(io.operand2, 31, 0) @[alu.scala 35:16]
                                                      wire _T_244 : UInt<64> @[alu.scala 36:21]
                                                      node _T_245 = mul(_T_240, _T_242) @[alu.scala 37:15]
                                                      node _T_246 = mul(_T_240, _T_243) @[alu.scala 37:23]
                                                      node _T_247 = shr(_T_246, 32) @[alu.scala 37:27]
                                                      node _T_248 = add(_T_245, _T_247) @[alu.scala 37:18]
                                                      node _T_249 = tail(_T_248, 1) @[alu.scala 37:18]
                                                      node _T_250 = mul(_T_241, _T_242) @[alu.scala 37:39]
                                                      node _T_251 = shr(_T_250, 32) @[alu.scala 37:43]
                                                      node _T_252 = add(_T_249, _T_251) @[alu.scala 37:34]
                                                      node _T_253 = tail(_T_252, 1) @[alu.scala 37:34]
                                                      _T_244 <= _T_253 @[alu.scala 37:11]
                                                      wire _T_254 : UInt<64> @[alu.scala 38:20]
                                                      node _T_255 = mul(_T_240, _T_243) @[alu.scala 39:16]
                                                      node _T_256 = shl(UInt<1>("h01"), 32) @[alu.scala 39:27]
                                                      node _T_257 = rem(_T_255, _T_256) @[alu.scala 39:20]
                                                      node _T_258 = mul(_T_241, _T_242) @[alu.scala 39:39]
                                                      node _T_259 = shl(UInt<1>("h01"), 32) @[alu.scala 39:50]
                                                      node _T_260 = rem(_T_258, _T_259) @[alu.scala 39:43]
                                                      node _T_261 = add(_T_257, _T_260) @[alu.scala 39:35]
                                                      node _T_262 = tail(_T_261, 1) @[alu.scala 39:35]
                                                      node _T_263 = mul(_T_241, _T_243) @[alu.scala 39:62]
                                                      node _T_264 = shr(_T_263, 32) @[alu.scala 39:66]
                                                      node _T_265 = add(_T_262, _T_264) @[alu.scala 39:57]
                                                      node _T_266 = tail(_T_265, 1) @[alu.scala 39:57]
                                                      _T_254 <= _T_266 @[alu.scala 39:10]
                                                      wire _T_267 : UInt<64> @[alu.scala 40:22]
                                                      node _T_268 = shr(_T_254, 32) @[alu.scala 41:29]
                                                      node _T_269 = add(_T_244, _T_268) @[alu.scala 41:21]
                                                      node _T_270 = tail(_T_269, 1) @[alu.scala 41:21]
                                                      _T_267 <= _T_270 @[alu.scala 41:12]
                                                      node _T_271 = asSInt(io.operand1) @[alu.scala 178:25]
                                                      node _T_272 = geq(_T_271, asSInt(UInt<1>("h00"))) @[alu.scala 178:32]
                                                      when _T_272 : @[alu.scala 178:40]
                                                        io.result <= _T_267 @[alu.scala 179:19]
                                                        skip @[alu.scala 178:40]
                                                      else : @[alu.scala 181:18]
                                                        node _T_273 = add(_T_267, UInt<1>("h01")) @[alu.scala 182:32]
                                                        node _T_274 = tail(_T_273, 1) @[alu.scala 182:32]
                                                        node _T_275 = sub(UInt<1>("h00"), _T_274) @[alu.scala 182:23]
                                                        node _T_276 = tail(_T_275, 1) @[alu.scala 182:23]
                                                        io.result <= _T_276 @[alu.scala 182:19]
                                                        skip @[alu.scala 181:18]
                                                      skip @[alu.scala 176:16]
                                                    skip @[alu.scala 171:43]
                                                  else : @[alu.scala 190:43]
                                                    node _T_277 = eq(io.operation, UInt<5>("h019")) @[alu.scala 190:27]
                                                    when _T_277 : @[alu.scala 190:43]
                                                      node _T_278 = eq(io.operand2, UInt<1>("h00")) @[alu.scala 191:23]
                                                      when _T_278 : @[alu.scala 191:32]
                                                        node _T_279 = bits(operand1_32, 31, 31) @[alu.scala 46:61]
                                                        node _T_280 = bits(_T_279, 0, 0) @[Bitwise.scala 72:15]
                                                        node _T_281 = mux(_T_280, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                                                        node _T_282 = bits(operand1_32, 31, 0) @[alu.scala 46:73]
                                                        node _T_283 = cat(_T_281, _T_282) @[Cat.scala 30:58]
                                                        io.result <= _T_283 @[alu.scala 192:17]
                                                        skip @[alu.scala 191:32]
                                                      else : @[alu.scala 194:16]
                                                        node _T_284 = rem(operand1_32, operand2_32) @[alu.scala 195:49]
                                                        node _T_285 = bits(_T_284, 31, 31) @[alu.scala 46:61]
                                                        node _T_286 = bits(_T_285, 0, 0) @[Bitwise.scala 72:15]
                                                        node _T_287 = mux(_T_286, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                                                        node _T_288 = bits(_T_284, 31, 0) @[alu.scala 46:73]
                                                        node _T_289 = cat(_T_287, _T_288) @[Cat.scala 30:58]
                                                        io.result <= _T_289 @[alu.scala 195:17]
                                                        skip @[alu.scala 194:16]
                                                      skip @[alu.scala 190:43]
                                                    else : @[alu.scala 198:43]
                                                      node _T_290 = eq(io.operation, UInt<5>("h01a")) @[alu.scala 198:27]
                                                      when _T_290 : @[alu.scala 198:43]
                                                        node _T_291 = eq(operand2_32, UInt<1>("h00")) @[alu.scala 199:23]
                                                        when _T_291 : @[alu.scala 199:32]
                                                          node _T_292 = bits(operand1_32, 31, 31) @[alu.scala 46:61]
                                                          node _T_293 = bits(_T_292, 0, 0) @[Bitwise.scala 72:15]
                                                          node _T_294 = mux(_T_293, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                                                          node _T_295 = bits(operand1_32, 31, 0) @[alu.scala 46:73]
                                                          node _T_296 = cat(_T_294, _T_295) @[Cat.scala 30:58]
                                                          io.result <= _T_296 @[alu.scala 200:17]
                                                          skip @[alu.scala 199:32]
                                                        else : @[alu.scala 202:98]
                                                          node _T_297 = asSInt(operand1_32) @[alu.scala 202:29]
                                                          node _T_298 = shl(asSInt(UInt<32>("h0ffffffff")), 31) @[alu.scala 202:56]
                                                          node _T_299 = eq(_T_297, _T_298) @[alu.scala 202:36]
                                                          node _T_300 = asSInt(operand2_32) @[alu.scala 202:80]
                                                          node _T_301 = eq(_T_300, asSInt(UInt<1>("h01"))) @[alu.scala 202:87]
                                                          node _T_302 = and(_T_299, _T_301) @[alu.scala 202:64]
                                                          when _T_302 : @[alu.scala 202:98]
                                                            io.result <= UInt<1>("h00") @[alu.scala 203:17]
                                                            skip @[alu.scala 202:98]
                                                          else : @[alu.scala 205:16]
                                                            node _T_303 = asSInt(operand1_32) @[alu.scala 206:50]
                                                            node _T_304 = asSInt(operand2_32) @[alu.scala 206:71]
                                                            node _T_305 = rem(_T_303, _T_304) @[alu.scala 206:57]
                                                            node _T_306 = asUInt(_T_305) @[alu.scala 206:79]
                                                            node _T_307 = bits(_T_306, 31, 31) @[alu.scala 46:61]
                                                            node _T_308 = bits(_T_307, 0, 0) @[Bitwise.scala 72:15]
                                                            node _T_309 = mux(_T_308, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                                                            node _T_310 = bits(_T_306, 31, 0) @[alu.scala 46:73]
                                                            node _T_311 = cat(_T_309, _T_310) @[Cat.scala 30:58]
                                                            io.result <= _T_311 @[alu.scala 206:17]
                                                            skip @[alu.scala 205:16]
                                                        skip @[alu.scala 198:43]
                                                      else : @[alu.scala 209:43]
                                                        node _T_312 = eq(io.operation, UInt<5>("h01b")) @[alu.scala 209:27]
                                                        when _T_312 : @[alu.scala 209:43]
                                                          node _T_313 = eq(io.operand2, UInt<1>("h00")) @[alu.scala 210:23]
                                                          when _T_313 : @[alu.scala 210:32]
                                                            io.result <= io.operand1 @[alu.scala 211:17]
                                                            skip @[alu.scala 210:32]
                                                          else : @[alu.scala 213:16]
                                                            node _T_314 = rem(io.operand1, io.operand2) @[alu.scala 214:32]
                                                            io.result <= _T_314 @[alu.scala 214:17]
                                                            skip @[alu.scala 213:16]
                                                          skip @[alu.scala 209:43]
                                                        else : @[alu.scala 217:43]
                                                          node _T_315 = eq(io.operation, UInt<5>("h01c")) @[alu.scala 217:27]
                                                          when _T_315 : @[alu.scala 217:43]
                                                            node _T_316 = eq(io.operand2, UInt<1>("h00")) @[alu.scala 218:23]
                                                            when _T_316 : @[alu.scala 218:32]
                                                              io.result <= io.operand1 @[alu.scala 219:17]
                                                              skip @[alu.scala 218:32]
                                                            else : @[alu.scala 221:98]
                                                              node _T_317 = asSInt(io.operand1) @[alu.scala 221:29]
                                                              node _T_318 = shl(asSInt(UInt<64>("h0ffffffffffffffff")), 63) @[alu.scala 221:56]
                                                              node _T_319 = eq(_T_317, _T_318) @[alu.scala 221:36]
                                                              node _T_320 = asSInt(io.operand2) @[alu.scala 221:80]
                                                              node _T_321 = eq(_T_320, asSInt(UInt<1>("h01"))) @[alu.scala 221:87]
                                                              node _T_322 = and(_T_319, _T_321) @[alu.scala 221:64]
                                                              when _T_322 : @[alu.scala 221:98]
                                                                io.result <= UInt<1>("h00") @[alu.scala 222:17]
                                                                skip @[alu.scala 221:98]
                                                              else : @[alu.scala 224:16]
                                                                node _T_323 = asSInt(io.operand1) @[alu.scala 225:33]
                                                                node _T_324 = asSInt(io.operand2) @[alu.scala 225:54]
                                                                node _T_325 = rem(_T_323, _T_324) @[alu.scala 225:40]
                                                                node _T_326 = asUInt(_T_325) @[alu.scala 225:62]
                                                                io.result <= _T_326 @[alu.scala 225:17]
                                                                skip @[alu.scala 224:16]
                                                            skip @[alu.scala 217:43]
                                                          else : @[alu.scala 228:14]
                                                            io.result <= UInt<1>("h00") @[alu.scala 229:15]
                                                            skip @[alu.scala 228:14]
    
  module ImmediateGenerator : 
    input clock : Clock
    input reset : Reset
    output io : {flip instruction : UInt<64>, sextImm : UInt<64>}
    
    io.sextImm <= UInt<1>("h00") @[helpers.scala 42:14]
    node opcode = bits(io.instruction, 6, 0) @[helpers.scala 44:30]
    node _T = eq(UInt<6>("h037"), opcode) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node _T_1 = bits(io.instruction, 31, 12) @[helpers.scala 51:31]
      node _T_2 = bits(_T_1, 19, 19) @[helpers.scala 52:37]
      node _T_3 = bits(_T_2, 0, 0) @[Bitwise.scala 72:15]
      node _T_4 = mux(_T_3, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
      node _T_5 = mux(UInt<1>("h00"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
      node _T_6 = cat(_T_4, _T_1) @[Cat.scala 30:58]
      node _T_7 = cat(_T_6, _T_5) @[Cat.scala 30:58]
      io.sextImm <= _T_7 @[helpers.scala 52:18]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_8 = eq(UInt<5>("h017"), opcode) @[Conditional.scala 37:30]
      when _T_8 : @[Conditional.scala 39:67]
        node _T_9 = bits(io.instruction, 31, 12) @[helpers.scala 58:31]
        node _T_10 = bits(_T_9, 19, 19) @[helpers.scala 59:37]
        node _T_11 = bits(_T_10, 0, 0) @[Bitwise.scala 72:15]
        node _T_12 = mux(_T_11, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
        node _T_13 = mux(UInt<1>("h00"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
        node _T_14 = cat(_T_12, _T_9) @[Cat.scala 30:58]
        node _T_15 = cat(_T_14, _T_13) @[Cat.scala 30:58]
        io.sextImm <= _T_15 @[helpers.scala 59:18]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_16 = eq(UInt<7>("h06f"), opcode) @[Conditional.scala 37:30]
        when _T_16 : @[Conditional.scala 39:67]
          node _T_17 = bits(io.instruction, 31, 31) @[helpers.scala 64:35]
          node _T_18 = bits(io.instruction, 19, 12) @[helpers.scala 64:55]
          node _T_19 = bits(io.instruction, 20, 20) @[helpers.scala 65:35]
          node _T_20 = bits(io.instruction, 30, 21) @[helpers.scala 65:55]
          node _T_21 = cat(_T_19, _T_20) @[Cat.scala 30:58]
          node _T_22 = cat(_T_17, _T_18) @[Cat.scala 30:58]
          node _T_23 = cat(_T_22, _T_21) @[Cat.scala 30:58]
          node _T_24 = bits(_T_23, 19, 19) @[helpers.scala 66:37]
          node _T_25 = bits(_T_24, 0, 0) @[Bitwise.scala 72:15]
          node _T_26 = mux(_T_25, UInt<43>("h07ffffffffff"), UInt<43>("h00")) @[Bitwise.scala 72:12]
          node _T_27 = cat(_T_26, _T_23) @[Cat.scala 30:58]
          node _T_28 = cat(_T_27, UInt<1>("h00")) @[Cat.scala 30:58]
          io.sextImm <= _T_28 @[helpers.scala 66:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_29 = eq(UInt<7>("h067"), opcode) @[Conditional.scala 37:30]
          when _T_29 : @[Conditional.scala 39:67]
            node _T_30 = bits(io.instruction, 31, 20) @[helpers.scala 69:31]
            node _T_31 = bits(_T_30, 11, 11) @[helpers.scala 70:36]
            node _T_32 = bits(_T_31, 0, 0) @[Bitwise.scala 72:15]
            node _T_33 = mux(_T_32, UInt<52>("h0fffffffffffff"), UInt<52>("h00")) @[Bitwise.scala 72:12]
            node _T_34 = cat(_T_33, _T_30) @[Cat.scala 30:58]
            io.sextImm <= _T_34 @[helpers.scala 70:18]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_35 = eq(UInt<7>("h063"), opcode) @[Conditional.scala 37:30]
            when _T_35 : @[Conditional.scala 39:67]
              node _T_36 = bits(io.instruction, 31, 31) @[helpers.scala 73:35]
              node _T_37 = bits(io.instruction, 7, 7) @[helpers.scala 73:55]
              node _T_38 = bits(io.instruction, 30, 25) @[helpers.scala 74:35]
              node _T_39 = bits(io.instruction, 11, 8) @[helpers.scala 74:58]
              node _T_40 = cat(_T_38, _T_39) @[Cat.scala 30:58]
              node _T_41 = cat(_T_36, _T_37) @[Cat.scala 30:58]
              node _T_42 = cat(_T_41, _T_40) @[Cat.scala 30:58]
              node _T_43 = bits(_T_42, 11, 11) @[helpers.scala 75:37]
              node _T_44 = bits(_T_43, 0, 0) @[Bitwise.scala 72:15]
              node _T_45 = mux(_T_44, UInt<51>("h07ffffffffffff"), UInt<51>("h00")) @[Bitwise.scala 72:12]
              node _T_46 = cat(_T_45, _T_42) @[Cat.scala 30:58]
              node _T_47 = cat(_T_46, UInt<1>("h00")) @[Cat.scala 30:58]
              io.sextImm <= _T_47 @[helpers.scala 75:18]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_48 = eq(UInt<2>("h03"), opcode) @[Conditional.scala 37:30]
              when _T_48 : @[Conditional.scala 39:67]
                node _T_49 = bits(io.instruction, 31, 20) @[helpers.scala 78:31]
                node _T_50 = bits(_T_49, 11, 11) @[helpers.scala 79:37]
                node _T_51 = bits(_T_50, 0, 0) @[Bitwise.scala 72:15]
                node _T_52 = mux(_T_51, UInt<52>("h0fffffffffffff"), UInt<52>("h00")) @[Bitwise.scala 72:12]
                node _T_53 = cat(_T_52, _T_49) @[Cat.scala 30:58]
                io.sextImm <= _T_53 @[helpers.scala 79:18]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_54 = eq(UInt<6>("h023"), opcode) @[Conditional.scala 37:30]
                when _T_54 : @[Conditional.scala 39:67]
                  node _T_55 = bits(io.instruction, 31, 25) @[helpers.scala 82:35]
                  node _T_56 = bits(io.instruction, 11, 7) @[helpers.scala 82:59]
                  node _T_57 = cat(_T_55, _T_56) @[Cat.scala 30:58]
                  node _T_58 = bits(_T_57, 11, 11) @[helpers.scala 83:37]
                  node _T_59 = bits(_T_58, 0, 0) @[Bitwise.scala 72:15]
                  node _T_60 = mux(_T_59, UInt<52>("h0fffffffffffff"), UInt<52>("h00")) @[Bitwise.scala 72:12]
                  node _T_61 = cat(_T_60, _T_57) @[Cat.scala 30:58]
                  io.sextImm <= _T_61 @[helpers.scala 83:18]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_62 = eq(UInt<5>("h013"), opcode) @[Conditional.scala 37:30]
                  when _T_62 : @[Conditional.scala 39:67]
                    node _T_63 = bits(io.instruction, 31, 20) @[helpers.scala 86:31]
                    node _T_64 = bits(_T_63, 11, 11) @[helpers.scala 87:36]
                    node _T_65 = bits(_T_64, 0, 0) @[Bitwise.scala 72:15]
                    node _T_66 = mux(_T_65, UInt<52>("h0fffffffffffff"), UInt<52>("h00")) @[Bitwise.scala 72:12]
                    node _T_67 = cat(_T_66, _T_63) @[Cat.scala 30:58]
                    io.sextImm <= _T_67 @[helpers.scala 87:18]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_68 = eq(UInt<5>("h01b"), opcode) @[Conditional.scala 37:30]
                    when _T_68 : @[Conditional.scala 39:67]
                      node _T_69 = bits(io.instruction, 31, 20) @[helpers.scala 90:31]
                      node _T_70 = bits(_T_69, 11, 11) @[helpers.scala 91:36]
                      node _T_71 = bits(_T_70, 0, 0) @[Bitwise.scala 72:15]
                      node _T_72 = mux(_T_71, UInt<52>("h0fffffffffffff"), UInt<52>("h00")) @[Bitwise.scala 72:12]
                      node _T_73 = cat(_T_72, _T_69) @[Cat.scala 30:58]
                      io.sextImm <= _T_73 @[helpers.scala 91:18]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_74 = eq(UInt<7>("h073"), opcode) @[Conditional.scala 37:30]
                      when _T_74 : @[Conditional.scala 39:67]
                        node _T_75 = mux(UInt<1>("h00"), UInt<59>("h07ffffffffffffff"), UInt<59>("h00")) @[Bitwise.scala 72:12]
                        node _T_76 = bits(io.instruction, 19, 15) @[helpers.scala 94:53]
                        node _T_77 = cat(_T_75, _T_76) @[Cat.scala 30:58]
                        io.sextImm <= _T_77 @[helpers.scala 94:18]
                        skip @[Conditional.scala 39:67]
    
  module ControlTransferUnit : 
    input clock : Clock
    input reset : Reset
    output io : {flip controltransferop : UInt<2>, flip operand1 : UInt<64>, flip operand2 : UInt<64>, flip funct3 : UInt<3>, flip pc : UInt<64>, flip imm : UInt<64>, nextpc : UInt<64>, taken : UInt<1>}
    
    node _T = add(io.pc, UInt<3>("h04")) @[controltransferunit.scala 40:22]
    node _T_1 = tail(_T, 1) @[controltransferunit.scala 40:22]
    io.nextpc <= _T_1 @[controltransferunit.scala 40:13]
    io.taken <= UInt<1>("h00") @[controltransferunit.scala 41:12]
    node _T_2 = eq(io.controltransferop, UInt<1>("h01")) @[controltransferunit.scala 43:30]
    when _T_2 : @[controltransferunit.scala 43:39]
      node _T_3 = add(io.pc, io.imm) @[controltransferunit.scala 44:24]
      node _T_4 = tail(_T_3, 1) @[controltransferunit.scala 44:24]
      io.nextpc <= _T_4 @[controltransferunit.scala 44:15]
      io.taken <= UInt<1>("h01") @[controltransferunit.scala 45:14]
      skip @[controltransferunit.scala 43:39]
    else : @[controltransferunit.scala 47:44]
      node _T_5 = eq(io.controltransferop, UInt<2>("h02")) @[controltransferunit.scala 47:35]
      when _T_5 : @[controltransferunit.scala 47:44]
        node _T_6 = add(io.operand1, io.imm) @[controltransferunit.scala 48:30]
        node _T_7 = tail(_T_6, 1) @[controltransferunit.scala 48:30]
        io.nextpc <= _T_7 @[controltransferunit.scala 48:15]
        io.taken <= UInt<1>("h01") @[controltransferunit.scala 49:14]
        skip @[controltransferunit.scala 47:44]
      else : @[controltransferunit.scala 51:44]
        node _T_8 = eq(io.controltransferop, UInt<2>("h03")) @[controltransferunit.scala 51:35]
        when _T_8 : @[controltransferunit.scala 51:44]
          node _T_9 = eq(io.funct3, UInt<1>("h00")) @[controltransferunit.scala 52:22]
          node _T_10 = eq(io.operand1, io.operand2) @[controltransferunit.scala 52:49]
          node _T_11 = and(_T_9, _T_10) @[controltransferunit.scala 52:35]
          node _T_12 = eq(io.funct3, UInt<1>("h01")) @[controltransferunit.scala 53:22]
          node _T_13 = neq(io.operand1, io.operand2) @[controltransferunit.scala 53:49]
          node _T_14 = and(_T_12, _T_13) @[controltransferunit.scala 53:35]
          node _T_15 = or(_T_11, _T_14) @[controltransferunit.scala 53:9]
          node _T_16 = eq(io.funct3, UInt<3>("h04")) @[controltransferunit.scala 54:22]
          node _T_17 = asSInt(io.operand1) @[controltransferunit.scala 54:49]
          node _T_18 = asSInt(io.operand2) @[controltransferunit.scala 54:70]
          node _T_19 = lt(_T_17, _T_18) @[controltransferunit.scala 54:56]
          node _T_20 = and(_T_16, _T_19) @[controltransferunit.scala 54:35]
          node _T_21 = or(_T_15, _T_20) @[controltransferunit.scala 54:9]
          node _T_22 = eq(io.funct3, UInt<3>("h05")) @[controltransferunit.scala 55:22]
          node _T_23 = asSInt(io.operand1) @[controltransferunit.scala 55:49]
          node _T_24 = asSInt(io.operand2) @[controltransferunit.scala 55:71]
          node _T_25 = geq(_T_23, _T_24) @[controltransferunit.scala 55:56]
          node _T_26 = and(_T_22, _T_25) @[controltransferunit.scala 55:35]
          node _T_27 = or(_T_21, _T_26) @[controltransferunit.scala 55:9]
          node _T_28 = eq(io.funct3, UInt<3>("h06")) @[controltransferunit.scala 56:22]
          node _T_29 = lt(io.operand1, io.operand2) @[controltransferunit.scala 56:49]
          node _T_30 = and(_T_28, _T_29) @[controltransferunit.scala 56:35]
          node _T_31 = or(_T_27, _T_30) @[controltransferunit.scala 56:9]
          node _T_32 = eq(io.funct3, UInt<3>("h07")) @[controltransferunit.scala 57:22]
          node _T_33 = geq(io.operand1, io.operand2) @[controltransferunit.scala 57:49]
          node _T_34 = and(_T_32, _T_33) @[controltransferunit.scala 57:35]
          node _T_35 = or(_T_31, _T_34) @[controltransferunit.scala 57:9]
          when _T_35 : @[controltransferunit.scala 57:66]
            node _T_36 = add(io.pc, io.imm) @[controltransferunit.scala 58:26]
            node _T_37 = tail(_T_36, 1) @[controltransferunit.scala 58:26]
            io.nextpc <= _T_37 @[controltransferunit.scala 58:17]
            io.taken <= UInt<1>("h01") @[controltransferunit.scala 59:16]
            skip @[controltransferunit.scala 57:66]
          skip @[controltransferunit.scala 51:44]
    
  module Adder : 
    input clock : Clock
    input reset : Reset
    output io : {flip inputx : UInt<64>, flip inputy : UInt<64>, result : UInt<64>}
    
    node _T = add(io.inputx, io.inputy) @[helpers.scala 23:26]
    node _T_1 = tail(_T, 1) @[helpers.scala 23:26]
    io.result <= _T_1 @[helpers.scala 23:13]
    
  module ForwardingUnit : 
    input clock : Clock
    input reset : Reset
    output io : {flip rs1 : UInt<5>, flip rs2 : UInt<5>, flip exmemrd : UInt<5>, flip exmemrw : UInt<1>, flip memwbrd : UInt<5>, flip memwbrw : UInt<1>, forwardA : UInt<2>, forwardB : UInt<2>}
    
    node _T = eq(io.exmemrw, UInt<1>("h01")) @[forwarding.scala 40:20]
    node _T_1 = eq(io.exmemrd, io.rs1) @[forwarding.scala 40:45]
    node _T_2 = and(_T, _T_1) @[forwarding.scala 40:31]
    node _T_3 = neq(io.exmemrd, UInt<1>("h00")) @[forwarding.scala 40:70]
    node _T_4 = and(_T_2, _T_3) @[forwarding.scala 40:56]
    when _T_4 : @[forwarding.scala 40:79]
      io.forwardA <= UInt<1>("h01") @[forwarding.scala 41:17]
      skip @[forwarding.scala 40:79]
    else : @[forwarding.scala 43:84]
      node _T_5 = eq(io.memwbrw, UInt<1>("h01")) @[forwarding.scala 43:25]
      node _T_6 = eq(io.memwbrd, io.rs1) @[forwarding.scala 43:50]
      node _T_7 = and(_T_5, _T_6) @[forwarding.scala 43:36]
      node _T_8 = neq(io.memwbrd, UInt<1>("h00")) @[forwarding.scala 43:75]
      node _T_9 = and(_T_7, _T_8) @[forwarding.scala 43:61]
      when _T_9 : @[forwarding.scala 43:84]
        io.forwardA <= UInt<2>("h02") @[forwarding.scala 44:17]
        skip @[forwarding.scala 43:84]
      else : @[forwarding.scala 46:14]
        io.forwardA <= UInt<1>("h00") @[forwarding.scala 47:17]
        skip @[forwarding.scala 46:14]
    node _T_10 = eq(io.exmemrw, UInt<1>("h01")) @[forwarding.scala 50:20]
    node _T_11 = eq(io.exmemrd, io.rs2) @[forwarding.scala 50:45]
    node _T_12 = and(_T_10, _T_11) @[forwarding.scala 50:31]
    node _T_13 = neq(io.exmemrd, UInt<1>("h00")) @[forwarding.scala 50:70]
    node _T_14 = and(_T_12, _T_13) @[forwarding.scala 50:56]
    when _T_14 : @[forwarding.scala 50:79]
      io.forwardB <= UInt<1>("h01") @[forwarding.scala 51:17]
      skip @[forwarding.scala 50:79]
    else : @[forwarding.scala 53:84]
      node _T_15 = eq(io.memwbrw, UInt<1>("h01")) @[forwarding.scala 53:25]
      node _T_16 = eq(io.memwbrd, io.rs2) @[forwarding.scala 53:50]
      node _T_17 = and(_T_15, _T_16) @[forwarding.scala 53:36]
      node _T_18 = neq(io.memwbrd, UInt<1>("h00")) @[forwarding.scala 53:75]
      node _T_19 = and(_T_17, _T_18) @[forwarding.scala 53:61]
      when _T_19 : @[forwarding.scala 53:84]
        io.forwardB <= UInt<2>("h02") @[forwarding.scala 54:17]
        skip @[forwarding.scala 53:84]
      else : @[forwarding.scala 56:14]
        io.forwardB <= UInt<1>("h00") @[forwarding.scala 57:17]
        skip @[forwarding.scala 56:14]
    
  module HazardUnit : 
    input clock : Clock
    input reset : Reset
    output io : {flip rs1 : UInt<5>, flip rs2 : UInt<5>, flip idex_memread : UInt<1>, flip idex_rd : UInt<5>, flip exmem_taken : UInt<1>, pcfromtaken : UInt<1>, pcstall : UInt<1>, if_id_stall : UInt<1>, id_ex_flush : UInt<1>, ex_mem_flush : UInt<1>, if_id_flush : UInt<1>}
    
    io.pcfromtaken <= UInt<1>("h00") @[hazard.scala 44:19]
    io.pcstall <= UInt<1>("h00") @[hazard.scala 45:19]
    io.if_id_stall <= UInt<1>("h00") @[hazard.scala 46:19]
    io.id_ex_flush <= UInt<1>("h00") @[hazard.scala 47:19]
    io.ex_mem_flush <= UInt<1>("h00") @[hazard.scala 48:19]
    io.if_id_flush <= UInt<1>("h00") @[hazard.scala 49:19]
    when io.exmem_taken : @[hazard.scala 51:25]
      io.pcfromtaken <= UInt<1>("h01") @[hazard.scala 52:21]
      io.pcstall <= UInt<1>("h00") @[hazard.scala 53:21]
      io.if_id_stall <= UInt<1>("h00") @[hazard.scala 54:21]
      io.if_id_flush <= UInt<1>("h01") @[hazard.scala 55:21]
      io.id_ex_flush <= UInt<1>("h01") @[hazard.scala 56:21]
      io.ex_mem_flush <= UInt<1>("h01") @[hazard.scala 57:21]
      skip @[hazard.scala 51:25]
    else : @[hazard.scala 58:85]
      node _T = eq(io.idex_rd, io.rs1) @[hazard.scala 58:47]
      node _T_1 = eq(io.idex_rd, io.rs2) @[hazard.scala 58:72]
      node _T_2 = or(_T, _T_1) @[hazard.scala 58:58]
      node _T_3 = and(io.idex_memread, _T_2) @[hazard.scala 58:32]
      when _T_3 : @[hazard.scala 58:85]
        io.pcfromtaken <= UInt<1>("h00") @[hazard.scala 59:21]
        io.pcstall <= UInt<1>("h01") @[hazard.scala 60:21]
        io.if_id_stall <= UInt<1>("h01") @[hazard.scala 61:21]
        io.id_ex_flush <= UInt<1>("h01") @[hazard.scala 62:21]
        io.ex_mem_flush <= UInt<1>("h00") @[hazard.scala 63:21]
        io.if_id_flush <= UInt<1>("h00") @[hazard.scala 64:21]
        skip @[hazard.scala 58:85]
    
  module StageReg : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {instruction : UInt<32>, pc : UInt<64>}, flip flush : UInt<1>, flip valid : UInt<1>, data : {instruction : UInt<32>, pc : UInt<64>}}
    
    io.data.pc is invalid @[stage-register.scala 41:6]
    io.data.instruction is invalid @[stage-register.scala 41:6]
    io.valid is invalid @[stage-register.scala 41:6]
    io.flush is invalid @[stage-register.scala 41:6]
    io.in.pc is invalid @[stage-register.scala 41:6]
    io.in.instruction is invalid @[stage-register.scala 41:6]
    wire _T : {instruction : UInt<32>, pc : UInt<64>} @[stage-register.scala 43:35]
    _T.pc <= UInt<64>("h00") @[stage-register.scala 43:35]
    _T.instruction <= UInt<32>("h00") @[stage-register.scala 43:35]
    reg reg : {instruction : UInt<32>, pc : UInt<64>}, clock with : (reset => (reset, _T)) @[stage-register.scala 43:21]
    io.data.pc <= reg.pc @[stage-register.scala 45:11]
    io.data.instruction <= reg.instruction @[stage-register.scala 45:11]
    when io.valid : @[stage-register.scala 47:19]
      reg.pc <= io.in.pc @[stage-register.scala 48:9]
      reg.instruction <= io.in.instruction @[stage-register.scala 48:9]
      skip @[stage-register.scala 47:19]
    when io.flush : @[stage-register.scala 51:19]
      wire _T_1 : {instruction : UInt<32>, pc : UInt<64>} @[stage-register.scala 52:25]
      _T_1.pc <= UInt<64>("h00") @[stage-register.scala 52:25]
      _T_1.instruction <= UInt<32>("h00") @[stage-register.scala 52:25]
      reg.pc <= _T_1.pc @[stage-register.scala 52:9]
      reg.instruction <= _T_1.instruction @[stage-register.scala 52:9]
      skip @[stage-register.scala 51:19]
    
  module StageReg_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {pc : UInt<64>, instruction : UInt<64>, sextImm : UInt<64>, readdata1 : UInt<64>, readdata2 : UInt<64>}, flip flush : UInt<1>, flip valid : UInt<1>, data : {pc : UInt<64>, instruction : UInt<64>, sextImm : UInt<64>, readdata1 : UInt<64>, readdata2 : UInt<64>}}
    
    io.data.readdata2 is invalid @[stage-register.scala 41:6]
    io.data.readdata1 is invalid @[stage-register.scala 41:6]
    io.data.sextImm is invalid @[stage-register.scala 41:6]
    io.data.instruction is invalid @[stage-register.scala 41:6]
    io.data.pc is invalid @[stage-register.scala 41:6]
    io.valid is invalid @[stage-register.scala 41:6]
    io.flush is invalid @[stage-register.scala 41:6]
    io.in.readdata2 is invalid @[stage-register.scala 41:6]
    io.in.readdata1 is invalid @[stage-register.scala 41:6]
    io.in.sextImm is invalid @[stage-register.scala 41:6]
    io.in.instruction is invalid @[stage-register.scala 41:6]
    io.in.pc is invalid @[stage-register.scala 41:6]
    wire _T : {pc : UInt<64>, instruction : UInt<64>, sextImm : UInt<64>, readdata1 : UInt<64>, readdata2 : UInt<64>} @[stage-register.scala 43:35]
    _T.readdata2 <= UInt<64>("h00") @[stage-register.scala 43:35]
    _T.readdata1 <= UInt<64>("h00") @[stage-register.scala 43:35]
    _T.sextImm <= UInt<64>("h00") @[stage-register.scala 43:35]
    _T.instruction <= UInt<64>("h00") @[stage-register.scala 43:35]
    _T.pc <= UInt<64>("h00") @[stage-register.scala 43:35]
    reg reg : {pc : UInt<64>, instruction : UInt<64>, sextImm : UInt<64>, readdata1 : UInt<64>, readdata2 : UInt<64>}, clock with : (reset => (reset, _T)) @[stage-register.scala 43:21]
    io.data.readdata2 <= reg.readdata2 @[stage-register.scala 45:11]
    io.data.readdata1 <= reg.readdata1 @[stage-register.scala 45:11]
    io.data.sextImm <= reg.sextImm @[stage-register.scala 45:11]
    io.data.instruction <= reg.instruction @[stage-register.scala 45:11]
    io.data.pc <= reg.pc @[stage-register.scala 45:11]
    when io.valid : @[stage-register.scala 47:19]
      reg.readdata2 <= io.in.readdata2 @[stage-register.scala 48:9]
      reg.readdata1 <= io.in.readdata1 @[stage-register.scala 48:9]
      reg.sextImm <= io.in.sextImm @[stage-register.scala 48:9]
      reg.instruction <= io.in.instruction @[stage-register.scala 48:9]
      reg.pc <= io.in.pc @[stage-register.scala 48:9]
      skip @[stage-register.scala 47:19]
    when io.flush : @[stage-register.scala 51:19]
      wire _T_1 : {pc : UInt<64>, instruction : UInt<64>, sextImm : UInt<64>, readdata1 : UInt<64>, readdata2 : UInt<64>} @[stage-register.scala 52:25]
      _T_1.readdata2 <= UInt<64>("h00") @[stage-register.scala 52:25]
      _T_1.readdata1 <= UInt<64>("h00") @[stage-register.scala 52:25]
      _T_1.sextImm <= UInt<64>("h00") @[stage-register.scala 52:25]
      _T_1.instruction <= UInt<64>("h00") @[stage-register.scala 52:25]
      _T_1.pc <= UInt<64>("h00") @[stage-register.scala 52:25]
      reg.readdata2 <= _T_1.readdata2 @[stage-register.scala 52:9]
      reg.readdata1 <= _T_1.readdata1 @[stage-register.scala 52:9]
      reg.sextImm <= _T_1.sextImm @[stage-register.scala 52:9]
      reg.instruction <= _T_1.instruction @[stage-register.scala 52:9]
      reg.pc <= _T_1.pc @[stage-register.scala 52:9]
      skip @[stage-register.scala 51:19]
    
  module StageReg_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {ex_ctrl : {aluop : UInt<3>, op1_src : UInt<1>, op2_src : UInt<2>, controltransferop : UInt<2>}, mem_ctrl : {memop : UInt<2>}, wb_ctrl : {writeback_valid : UInt<1>, writeback_src : UInt<2>}}, flip flush : UInt<1>, flip valid : UInt<1>, data : {ex_ctrl : {aluop : UInt<3>, op1_src : UInt<1>, op2_src : UInt<2>, controltransferop : UInt<2>}, mem_ctrl : {memop : UInt<2>}, wb_ctrl : {writeback_valid : UInt<1>, writeback_src : UInt<2>}}}
    
    io.data.wb_ctrl.writeback_src is invalid @[stage-register.scala 41:6]
    io.data.wb_ctrl.writeback_valid is invalid @[stage-register.scala 41:6]
    io.data.mem_ctrl.memop is invalid @[stage-register.scala 41:6]
    io.data.ex_ctrl.controltransferop is invalid @[stage-register.scala 41:6]
    io.data.ex_ctrl.op2_src is invalid @[stage-register.scala 41:6]
    io.data.ex_ctrl.op1_src is invalid @[stage-register.scala 41:6]
    io.data.ex_ctrl.aluop is invalid @[stage-register.scala 41:6]
    io.valid is invalid @[stage-register.scala 41:6]
    io.flush is invalid @[stage-register.scala 41:6]
    io.in.wb_ctrl.writeback_src is invalid @[stage-register.scala 41:6]
    io.in.wb_ctrl.writeback_valid is invalid @[stage-register.scala 41:6]
    io.in.mem_ctrl.memop is invalid @[stage-register.scala 41:6]
    io.in.ex_ctrl.controltransferop is invalid @[stage-register.scala 41:6]
    io.in.ex_ctrl.op2_src is invalid @[stage-register.scala 41:6]
    io.in.ex_ctrl.op1_src is invalid @[stage-register.scala 41:6]
    io.in.ex_ctrl.aluop is invalid @[stage-register.scala 41:6]
    wire _T : {ex_ctrl : {aluop : UInt<3>, op1_src : UInt<1>, op2_src : UInt<2>, controltransferop : UInt<2>}, mem_ctrl : {memop : UInt<2>}, wb_ctrl : {writeback_valid : UInt<1>, writeback_src : UInt<2>}} @[stage-register.scala 43:35]
    _T.wb_ctrl.writeback_src <= UInt<2>("h00") @[stage-register.scala 43:35]
    _T.wb_ctrl.writeback_valid <= UInt<1>("h00") @[stage-register.scala 43:35]
    _T.mem_ctrl.memop <= UInt<2>("h00") @[stage-register.scala 43:35]
    _T.ex_ctrl.controltransferop <= UInt<2>("h00") @[stage-register.scala 43:35]
    _T.ex_ctrl.op2_src <= UInt<2>("h00") @[stage-register.scala 43:35]
    _T.ex_ctrl.op1_src <= UInt<1>("h00") @[stage-register.scala 43:35]
    _T.ex_ctrl.aluop <= UInt<3>("h00") @[stage-register.scala 43:35]
    reg reg : {ex_ctrl : {aluop : UInt<3>, op1_src : UInt<1>, op2_src : UInt<2>, controltransferop : UInt<2>}, mem_ctrl : {memop : UInt<2>}, wb_ctrl : {writeback_valid : UInt<1>, writeback_src : UInt<2>}}, clock with : (reset => (reset, _T)) @[stage-register.scala 43:21]
    io.data.wb_ctrl.writeback_src <= reg.wb_ctrl.writeback_src @[stage-register.scala 45:11]
    io.data.wb_ctrl.writeback_valid <= reg.wb_ctrl.writeback_valid @[stage-register.scala 45:11]
    io.data.mem_ctrl.memop <= reg.mem_ctrl.memop @[stage-register.scala 45:11]
    io.data.ex_ctrl.controltransferop <= reg.ex_ctrl.controltransferop @[stage-register.scala 45:11]
    io.data.ex_ctrl.op2_src <= reg.ex_ctrl.op2_src @[stage-register.scala 45:11]
    io.data.ex_ctrl.op1_src <= reg.ex_ctrl.op1_src @[stage-register.scala 45:11]
    io.data.ex_ctrl.aluop <= reg.ex_ctrl.aluop @[stage-register.scala 45:11]
    when io.valid : @[stage-register.scala 47:19]
      reg.wb_ctrl.writeback_src <= io.in.wb_ctrl.writeback_src @[stage-register.scala 48:9]
      reg.wb_ctrl.writeback_valid <= io.in.wb_ctrl.writeback_valid @[stage-register.scala 48:9]
      reg.mem_ctrl.memop <= io.in.mem_ctrl.memop @[stage-register.scala 48:9]
      reg.ex_ctrl.controltransferop <= io.in.ex_ctrl.controltransferop @[stage-register.scala 48:9]
      reg.ex_ctrl.op2_src <= io.in.ex_ctrl.op2_src @[stage-register.scala 48:9]
      reg.ex_ctrl.op1_src <= io.in.ex_ctrl.op1_src @[stage-register.scala 48:9]
      reg.ex_ctrl.aluop <= io.in.ex_ctrl.aluop @[stage-register.scala 48:9]
      skip @[stage-register.scala 47:19]
    when io.flush : @[stage-register.scala 51:19]
      wire _T_1 : {ex_ctrl : {aluop : UInt<3>, op1_src : UInt<1>, op2_src : UInt<2>, controltransferop : UInt<2>}, mem_ctrl : {memop : UInt<2>}, wb_ctrl : {writeback_valid : UInt<1>, writeback_src : UInt<2>}} @[stage-register.scala 52:25]
      _T_1.wb_ctrl.writeback_src <= UInt<2>("h00") @[stage-register.scala 52:25]
      _T_1.wb_ctrl.writeback_valid <= UInt<1>("h00") @[stage-register.scala 52:25]
      _T_1.mem_ctrl.memop <= UInt<2>("h00") @[stage-register.scala 52:25]
      _T_1.ex_ctrl.controltransferop <= UInt<2>("h00") @[stage-register.scala 52:25]
      _T_1.ex_ctrl.op2_src <= UInt<2>("h00") @[stage-register.scala 52:25]
      _T_1.ex_ctrl.op1_src <= UInt<1>("h00") @[stage-register.scala 52:25]
      _T_1.ex_ctrl.aluop <= UInt<3>("h00") @[stage-register.scala 52:25]
      reg.wb_ctrl.writeback_src <= _T_1.wb_ctrl.writeback_src @[stage-register.scala 52:9]
      reg.wb_ctrl.writeback_valid <= _T_1.wb_ctrl.writeback_valid @[stage-register.scala 52:9]
      reg.mem_ctrl.memop <= _T_1.mem_ctrl.memop @[stage-register.scala 52:9]
      reg.ex_ctrl.controltransferop <= _T_1.ex_ctrl.controltransferop @[stage-register.scala 52:9]
      reg.ex_ctrl.op2_src <= _T_1.ex_ctrl.op2_src @[stage-register.scala 52:9]
      reg.ex_ctrl.op1_src <= _T_1.ex_ctrl.op1_src @[stage-register.scala 52:9]
      reg.ex_ctrl.aluop <= _T_1.ex_ctrl.aluop @[stage-register.scala 52:9]
      skip @[stage-register.scala 51:19]
    
  module StageReg_3 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {sextImm : UInt<64>, alu_result : UInt<64>, mem_writedata : UInt<64>, nextpc : UInt<64>, taken : UInt<1>, instruction : UInt<32>}, flip flush : UInt<1>, flip valid : UInt<1>, data : {sextImm : UInt<64>, alu_result : UInt<64>, mem_writedata : UInt<64>, nextpc : UInt<64>, taken : UInt<1>, instruction : UInt<32>}}
    
    io.data.instruction is invalid @[stage-register.scala 41:6]
    io.data.taken is invalid @[stage-register.scala 41:6]
    io.data.nextpc is invalid @[stage-register.scala 41:6]
    io.data.mem_writedata is invalid @[stage-register.scala 41:6]
    io.data.alu_result is invalid @[stage-register.scala 41:6]
    io.data.sextImm is invalid @[stage-register.scala 41:6]
    io.valid is invalid @[stage-register.scala 41:6]
    io.flush is invalid @[stage-register.scala 41:6]
    io.in.instruction is invalid @[stage-register.scala 41:6]
    io.in.taken is invalid @[stage-register.scala 41:6]
    io.in.nextpc is invalid @[stage-register.scala 41:6]
    io.in.mem_writedata is invalid @[stage-register.scala 41:6]
    io.in.alu_result is invalid @[stage-register.scala 41:6]
    io.in.sextImm is invalid @[stage-register.scala 41:6]
    wire _T : {sextImm : UInt<64>, alu_result : UInt<64>, mem_writedata : UInt<64>, nextpc : UInt<64>, taken : UInt<1>, instruction : UInt<32>} @[stage-register.scala 43:35]
    _T.instruction <= UInt<32>("h00") @[stage-register.scala 43:35]
    _T.taken <= UInt<1>("h00") @[stage-register.scala 43:35]
    _T.nextpc <= UInt<64>("h00") @[stage-register.scala 43:35]
    _T.mem_writedata <= UInt<64>("h00") @[stage-register.scala 43:35]
    _T.alu_result <= UInt<64>("h00") @[stage-register.scala 43:35]
    _T.sextImm <= UInt<64>("h00") @[stage-register.scala 43:35]
    reg reg : {sextImm : UInt<64>, alu_result : UInt<64>, mem_writedata : UInt<64>, nextpc : UInt<64>, taken : UInt<1>, instruction : UInt<32>}, clock with : (reset => (reset, _T)) @[stage-register.scala 43:21]
    io.data.instruction <= reg.instruction @[stage-register.scala 45:11]
    io.data.taken <= reg.taken @[stage-register.scala 45:11]
    io.data.nextpc <= reg.nextpc @[stage-register.scala 45:11]
    io.data.mem_writedata <= reg.mem_writedata @[stage-register.scala 45:11]
    io.data.alu_result <= reg.alu_result @[stage-register.scala 45:11]
    io.data.sextImm <= reg.sextImm @[stage-register.scala 45:11]
    when io.valid : @[stage-register.scala 47:19]
      reg.instruction <= io.in.instruction @[stage-register.scala 48:9]
      reg.taken <= io.in.taken @[stage-register.scala 48:9]
      reg.nextpc <= io.in.nextpc @[stage-register.scala 48:9]
      reg.mem_writedata <= io.in.mem_writedata @[stage-register.scala 48:9]
      reg.alu_result <= io.in.alu_result @[stage-register.scala 48:9]
      reg.sextImm <= io.in.sextImm @[stage-register.scala 48:9]
      skip @[stage-register.scala 47:19]
    when io.flush : @[stage-register.scala 51:19]
      wire _T_1 : {sextImm : UInt<64>, alu_result : UInt<64>, mem_writedata : UInt<64>, nextpc : UInt<64>, taken : UInt<1>, instruction : UInt<32>} @[stage-register.scala 52:25]
      _T_1.instruction <= UInt<32>("h00") @[stage-register.scala 52:25]
      _T_1.taken <= UInt<1>("h00") @[stage-register.scala 52:25]
      _T_1.nextpc <= UInt<64>("h00") @[stage-register.scala 52:25]
      _T_1.mem_writedata <= UInt<64>("h00") @[stage-register.scala 52:25]
      _T_1.alu_result <= UInt<64>("h00") @[stage-register.scala 52:25]
      _T_1.sextImm <= UInt<64>("h00") @[stage-register.scala 52:25]
      reg.instruction <= _T_1.instruction @[stage-register.scala 52:9]
      reg.taken <= _T_1.taken @[stage-register.scala 52:9]
      reg.nextpc <= _T_1.nextpc @[stage-register.scala 52:9]
      reg.mem_writedata <= _T_1.mem_writedata @[stage-register.scala 52:9]
      reg.alu_result <= _T_1.alu_result @[stage-register.scala 52:9]
      reg.sextImm <= _T_1.sextImm @[stage-register.scala 52:9]
      skip @[stage-register.scala 51:19]
    
  module StageReg_4 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {mem_ctrl : {memop : UInt<2>}, wb_ctrl : {writeback_valid : UInt<1>, writeback_src : UInt<2>}}, flip flush : UInt<1>, flip valid : UInt<1>, data : {mem_ctrl : {memop : UInt<2>}, wb_ctrl : {writeback_valid : UInt<1>, writeback_src : UInt<2>}}}
    
    io.data.wb_ctrl.writeback_src is invalid @[stage-register.scala 41:6]
    io.data.wb_ctrl.writeback_valid is invalid @[stage-register.scala 41:6]
    io.data.mem_ctrl.memop is invalid @[stage-register.scala 41:6]
    io.valid is invalid @[stage-register.scala 41:6]
    io.flush is invalid @[stage-register.scala 41:6]
    io.in.wb_ctrl.writeback_src is invalid @[stage-register.scala 41:6]
    io.in.wb_ctrl.writeback_valid is invalid @[stage-register.scala 41:6]
    io.in.mem_ctrl.memop is invalid @[stage-register.scala 41:6]
    wire _T : {mem_ctrl : {memop : UInt<2>}, wb_ctrl : {writeback_valid : UInt<1>, writeback_src : UInt<2>}} @[stage-register.scala 43:35]
    _T.wb_ctrl.writeback_src <= UInt<2>("h00") @[stage-register.scala 43:35]
    _T.wb_ctrl.writeback_valid <= UInt<1>("h00") @[stage-register.scala 43:35]
    _T.mem_ctrl.memop <= UInt<2>("h00") @[stage-register.scala 43:35]
    reg reg : {mem_ctrl : {memop : UInt<2>}, wb_ctrl : {writeback_valid : UInt<1>, writeback_src : UInt<2>}}, clock with : (reset => (reset, _T)) @[stage-register.scala 43:21]
    io.data.wb_ctrl.writeback_src <= reg.wb_ctrl.writeback_src @[stage-register.scala 45:11]
    io.data.wb_ctrl.writeback_valid <= reg.wb_ctrl.writeback_valid @[stage-register.scala 45:11]
    io.data.mem_ctrl.memop <= reg.mem_ctrl.memop @[stage-register.scala 45:11]
    when io.valid : @[stage-register.scala 47:19]
      reg.wb_ctrl.writeback_src <= io.in.wb_ctrl.writeback_src @[stage-register.scala 48:9]
      reg.wb_ctrl.writeback_valid <= io.in.wb_ctrl.writeback_valid @[stage-register.scala 48:9]
      reg.mem_ctrl.memop <= io.in.mem_ctrl.memop @[stage-register.scala 48:9]
      skip @[stage-register.scala 47:19]
    when io.flush : @[stage-register.scala 51:19]
      wire _T_1 : {mem_ctrl : {memop : UInt<2>}, wb_ctrl : {writeback_valid : UInt<1>, writeback_src : UInt<2>}} @[stage-register.scala 52:25]
      _T_1.wb_ctrl.writeback_src <= UInt<2>("h00") @[stage-register.scala 52:25]
      _T_1.wb_ctrl.writeback_valid <= UInt<1>("h00") @[stage-register.scala 52:25]
      _T_1.mem_ctrl.memop <= UInt<2>("h00") @[stage-register.scala 52:25]
      reg.wb_ctrl.writeback_src <= _T_1.wb_ctrl.writeback_src @[stage-register.scala 52:9]
      reg.wb_ctrl.writeback_valid <= _T_1.wb_ctrl.writeback_valid @[stage-register.scala 52:9]
      reg.mem_ctrl.memop <= _T_1.mem_ctrl.memop @[stage-register.scala 52:9]
      skip @[stage-register.scala 51:19]
    
  module StageReg_5 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {sextImm : UInt<64>, alu_result : UInt<64>, mem_readdata : UInt<64>, instruction : UInt<64>}, flip flush : UInt<1>, flip valid : UInt<1>, data : {sextImm : UInt<64>, alu_result : UInt<64>, mem_readdata : UInt<64>, instruction : UInt<64>}}
    
    io.data.instruction is invalid @[stage-register.scala 41:6]
    io.data.mem_readdata is invalid @[stage-register.scala 41:6]
    io.data.alu_result is invalid @[stage-register.scala 41:6]
    io.data.sextImm is invalid @[stage-register.scala 41:6]
    io.valid is invalid @[stage-register.scala 41:6]
    io.flush is invalid @[stage-register.scala 41:6]
    io.in.instruction is invalid @[stage-register.scala 41:6]
    io.in.mem_readdata is invalid @[stage-register.scala 41:6]
    io.in.alu_result is invalid @[stage-register.scala 41:6]
    io.in.sextImm is invalid @[stage-register.scala 41:6]
    wire _T : {sextImm : UInt<64>, alu_result : UInt<64>, mem_readdata : UInt<64>, instruction : UInt<64>} @[stage-register.scala 43:35]
    _T.instruction <= UInt<64>("h00") @[stage-register.scala 43:35]
    _T.mem_readdata <= UInt<64>("h00") @[stage-register.scala 43:35]
    _T.alu_result <= UInt<64>("h00") @[stage-register.scala 43:35]
    _T.sextImm <= UInt<64>("h00") @[stage-register.scala 43:35]
    reg reg : {sextImm : UInt<64>, alu_result : UInt<64>, mem_readdata : UInt<64>, instruction : UInt<64>}, clock with : (reset => (reset, _T)) @[stage-register.scala 43:21]
    io.data.instruction <= reg.instruction @[stage-register.scala 45:11]
    io.data.mem_readdata <= reg.mem_readdata @[stage-register.scala 45:11]
    io.data.alu_result <= reg.alu_result @[stage-register.scala 45:11]
    io.data.sextImm <= reg.sextImm @[stage-register.scala 45:11]
    when io.valid : @[stage-register.scala 47:19]
      reg.instruction <= io.in.instruction @[stage-register.scala 48:9]
      reg.mem_readdata <= io.in.mem_readdata @[stage-register.scala 48:9]
      reg.alu_result <= io.in.alu_result @[stage-register.scala 48:9]
      reg.sextImm <= io.in.sextImm @[stage-register.scala 48:9]
      skip @[stage-register.scala 47:19]
    when io.flush : @[stage-register.scala 51:19]
      wire _T_1 : {sextImm : UInt<64>, alu_result : UInt<64>, mem_readdata : UInt<64>, instruction : UInt<64>} @[stage-register.scala 52:25]
      _T_1.instruction <= UInt<64>("h00") @[stage-register.scala 52:25]
      _T_1.mem_readdata <= UInt<64>("h00") @[stage-register.scala 52:25]
      _T_1.alu_result <= UInt<64>("h00") @[stage-register.scala 52:25]
      _T_1.sextImm <= UInt<64>("h00") @[stage-register.scala 52:25]
      reg.instruction <= _T_1.instruction @[stage-register.scala 52:9]
      reg.mem_readdata <= _T_1.mem_readdata @[stage-register.scala 52:9]
      reg.alu_result <= _T_1.alu_result @[stage-register.scala 52:9]
      reg.sextImm <= _T_1.sextImm @[stage-register.scala 52:9]
      skip @[stage-register.scala 51:19]
    
  module StageReg_6 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {wb_ctrl : {writeback_valid : UInt<1>, writeback_src : UInt<2>}}, flip flush : UInt<1>, flip valid : UInt<1>, data : {wb_ctrl : {writeback_valid : UInt<1>, writeback_src : UInt<2>}}}
    
    io.data.wb_ctrl.writeback_src is invalid @[stage-register.scala 41:6]
    io.data.wb_ctrl.writeback_valid is invalid @[stage-register.scala 41:6]
    io.valid is invalid @[stage-register.scala 41:6]
    io.flush is invalid @[stage-register.scala 41:6]
    io.in.wb_ctrl.writeback_src is invalid @[stage-register.scala 41:6]
    io.in.wb_ctrl.writeback_valid is invalid @[stage-register.scala 41:6]
    wire _T : {wb_ctrl : {writeback_valid : UInt<1>, writeback_src : UInt<2>}} @[stage-register.scala 43:35]
    _T.wb_ctrl.writeback_src <= UInt<2>("h00") @[stage-register.scala 43:35]
    _T.wb_ctrl.writeback_valid <= UInt<1>("h00") @[stage-register.scala 43:35]
    reg reg : {wb_ctrl : {writeback_valid : UInt<1>, writeback_src : UInt<2>}}, clock with : (reset => (reset, _T)) @[stage-register.scala 43:21]
    io.data.wb_ctrl.writeback_src <= reg.wb_ctrl.writeback_src @[stage-register.scala 45:11]
    io.data.wb_ctrl.writeback_valid <= reg.wb_ctrl.writeback_valid @[stage-register.scala 45:11]
    when io.valid : @[stage-register.scala 47:19]
      reg.wb_ctrl.writeback_src <= io.in.wb_ctrl.writeback_src @[stage-register.scala 48:9]
      reg.wb_ctrl.writeback_valid <= io.in.wb_ctrl.writeback_valid @[stage-register.scala 48:9]
      skip @[stage-register.scala 47:19]
    when io.flush : @[stage-register.scala 51:19]
      wire _T_1 : {wb_ctrl : {writeback_valid : UInt<1>, writeback_src : UInt<2>}} @[stage-register.scala 52:25]
      _T_1.wb_ctrl.writeback_src <= UInt<2>("h00") @[stage-register.scala 52:25]
      _T_1.wb_ctrl.writeback_valid <= UInt<1>("h00") @[stage-register.scala 52:25]
      reg.wb_ctrl.writeback_src <= _T_1.wb_ctrl.writeback_src @[stage-register.scala 52:9]
      reg.wb_ctrl.writeback_valid <= _T_1.wb_ctrl.writeback_valid @[stage-register.scala 52:9]
      skip @[stage-register.scala 51:19]
    
  module PipelinedCPU : 
    input clock : Clock
    input reset : Reset
    output io : {flip imem : {flip address : UInt<64>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<64>, ready : UInt<1>}, flip dmem : {flip address : UInt<64>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<64>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<64>}}
    
    reg pc : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[cpu.scala 88:32]
    inst control of Control @[cpu.scala 89:31]
    control.clock <= clock
    control.reset <= reset
    inst registers of RegisterFile @[cpu.scala 90:31]
    registers.clock <= clock
    registers.reset <= reset
    inst aluControl of ALUControl @[cpu.scala 91:31]
    aluControl.clock <= clock
    aluControl.reset <= reset
    inst alu of ALU @[cpu.scala 92:31]
    alu.clock <= clock
    alu.reset <= reset
    inst immGen of ImmediateGenerator @[cpu.scala 93:31]
    immGen.clock <= clock
    immGen.reset <= reset
    inst controlTransfer of ControlTransferUnit @[cpu.scala 94:31]
    controlTransfer.clock <= clock
    controlTransfer.reset <= reset
    inst pcPlusFour of Adder @[cpu.scala 95:31]
    pcPlusFour.clock <= clock
    pcPlusFour.reset <= reset
    inst forwarding of ForwardingUnit @[cpu.scala 96:31]
    forwarding.clock <= clock
    forwarding.reset <= reset
    inst hazard of HazardUnit @[cpu.scala 97:31]
    hazard.clock <= clock
    hazard.reset <= reset
    reg value : UInt<30>, clock with : (reset => (reset, UInt<30>("h00"))) @[Counter.scala 29:33]
    wire _T : UInt<1>
    _T <= UInt<1>("h00")
    when UInt<1>("h01") : @[Counter.scala 67:17]
      node _T_1 = eq(value, UInt<30>("h03fffffff")) @[Counter.scala 38:24]
      node _T_2 = add(value, UInt<1>("h01")) @[Counter.scala 39:22]
      node _T_3 = tail(_T_2, 1) @[Counter.scala 39:22]
      value <= _T_3 @[Counter.scala 39:13]
      _T <= _T_1 @[Counter.scala 67:24]
      skip @[Counter.scala 67:17]
    inst if_id of StageReg @[cpu.scala 101:27]
    if_id.clock <= clock
    if_id.reset <= reset
    inst id_ex of StageReg_1 @[cpu.scala 103:27]
    id_ex.clock <= clock
    id_ex.reset <= reset
    inst id_ex_ctrl of StageReg_2 @[cpu.scala 104:27]
    id_ex_ctrl.clock <= clock
    id_ex_ctrl.reset <= reset
    inst ex_mem of StageReg_3 @[cpu.scala 106:27]
    ex_mem.clock <= clock
    ex_mem.reset <= reset
    inst ex_mem_ctrl of StageReg_4 @[cpu.scala 107:27]
    ex_mem_ctrl.clock <= clock
    ex_mem_ctrl.reset <= reset
    inst mem_wb of StageReg_5 @[cpu.scala 109:27]
    mem_wb.clock <= clock
    mem_wb.reset <= reset
    inst mem_wb_ctrl of StageReg_6 @[cpu.scala 113:27]
    mem_wb_ctrl.clock <= clock
    mem_wb_ctrl.reset <= reset
    wire next_pc : UInt<64> @[cpu.scala 118:21]
    when hazard.io.pcfromtaken : @[cpu.scala 127:32]
      pc <= next_pc @[cpu.scala 128:8]
      skip @[cpu.scala 127:32]
    else : @[cpu.scala 129:35]
      when hazard.io.pcstall : @[cpu.scala 129:35]
        pc <= pc @[cpu.scala 130:8]
        skip @[cpu.scala 129:35]
      else : @[cpu.scala 131:16]
        pc <= pcPlusFour.io.result @[cpu.scala 132:8]
        skip @[cpu.scala 131:16]
    pcPlusFour.io.inputx <= pc @[cpu.scala 135:24]
    pcPlusFour.io.inputy <= UInt<3>("h04") @[cpu.scala 136:24]
    io.imem.address <= pc @[cpu.scala 139:19]
    io.imem.valid <= UInt<1>("h01") @[cpu.scala 140:19]
    node _T_4 = rem(pc, UInt<4>("h08")) @[cpu.scala 143:13]
    node _T_5 = eq(_T_4, UInt<3>("h04")) @[cpu.scala 143:20]
    when _T_5 : @[cpu.scala 143:29]
      node _T_6 = bits(io.imem.instruction, 63, 32) @[cpu.scala 144:51]
      if_id.io.in.instruction <= _T_6 @[cpu.scala 144:29]
      skip @[cpu.scala 143:29]
    else : @[cpu.scala 145:16]
      node _T_7 = bits(io.imem.instruction, 31, 0) @[cpu.scala 146:51]
      if_id.io.in.instruction <= _T_7 @[cpu.scala 146:29]
      skip @[cpu.scala 145:16]
    if_id.io.in.pc <= pc @[cpu.scala 148:18]
    node _T_8 = not(hazard.io.if_id_stall) @[cpu.scala 151:21]
    if_id.io.valid <= _T_8 @[cpu.scala 151:18]
    if_id.io.flush <= hazard.io.if_id_flush @[cpu.scala 152:18]
    node _T_9 = bits(if_id.io.data.instruction, 6, 0) @[cpu.scala 160:49]
    control.io.opcode <= _T_9 @[cpu.scala 160:21]
    node id_rs1 = bits(if_id.io.data.instruction, 19, 15) @[cpu.scala 163:41]
    node id_rs2 = bits(if_id.io.data.instruction, 24, 20) @[cpu.scala 164:41]
    hazard.io.rs1 <= id_rs1 @[cpu.scala 167:17]
    hazard.io.rs2 <= id_rs2 @[cpu.scala 168:17]
    registers.io.readreg1 <= id_rs1 @[cpu.scala 171:25]
    registers.io.readreg2 <= id_rs2 @[cpu.scala 172:25]
    immGen.io.instruction <= if_id.io.data.instruction @[cpu.scala 175:25]
    id_ex.io.in.pc <= if_id.io.data.pc @[cpu.scala 179:27]
    id_ex.io.in.instruction <= if_id.io.data.instruction @[cpu.scala 180:27]
    id_ex.io.in.sextImm <= immGen.io.sextImm @[cpu.scala 181:27]
    id_ex.io.in.readdata1 <= registers.io.readdata1 @[cpu.scala 182:27]
    id_ex.io.in.readdata2 <= registers.io.readdata2 @[cpu.scala 183:27]
    id_ex_ctrl.io.in.ex_ctrl.aluop <= control.io.aluop @[cpu.scala 185:46]
    id_ex_ctrl.io.in.ex_ctrl.op1_src <= control.io.op1_src @[cpu.scala 186:46]
    id_ex_ctrl.io.in.ex_ctrl.op2_src <= control.io.op2_src @[cpu.scala 187:46]
    id_ex_ctrl.io.in.ex_ctrl.controltransferop <= control.io.controltransferop @[cpu.scala 188:46]
    id_ex_ctrl.io.in.mem_ctrl.memop <= control.io.memop @[cpu.scala 190:35]
    id_ex_ctrl.io.in.wb_ctrl.writeback_valid <= control.io.writeback_valid @[cpu.scala 192:44]
    id_ex_ctrl.io.in.wb_ctrl.writeback_src <= control.io.writeback_src @[cpu.scala 193:44]
    id_ex.io.valid <= UInt<1>("h01") @[cpu.scala 196:18]
    id_ex.io.flush <= hazard.io.id_ex_flush @[cpu.scala 197:18]
    id_ex_ctrl.io.valid <= UInt<1>("h01") @[cpu.scala 198:23]
    id_ex_ctrl.io.flush <= hazard.io.id_ex_flush @[cpu.scala 199:23]
    node ex_funct3 = bits(id_ex.io.data.instruction, 14, 12) @[cpu.scala 206:44]
    node ex_funct7 = bits(id_ex.io.data.instruction, 31, 25) @[cpu.scala 207:44]
    node ex_rs1 = bits(id_ex.io.data.instruction, 19, 15) @[cpu.scala 208:41]
    node ex_rs2 = bits(id_ex.io.data.instruction, 24, 20) @[cpu.scala 209:41]
    node ex_rd = bits(id_ex.io.data.instruction, 11, 7) @[cpu.scala 210:41]
    node _T_10 = eq(id_ex_ctrl.io.data.mem_ctrl.memop, UInt<1>("h01")) @[cpu.scala 213:63]
    hazard.io.idex_memread <= _T_10 @[cpu.scala 213:26]
    hazard.io.idex_rd <= ex_rd @[cpu.scala 214:26]
    forwarding.io.rs1 <= ex_rs1 @[cpu.scala 217:21]
    forwarding.io.rs2 <= ex_rs2 @[cpu.scala 218:21]
    aluControl.io.aluop <= id_ex_ctrl.io.data.ex_ctrl.aluop @[cpu.scala 221:24]
    aluControl.io.funct3 <= ex_funct3 @[cpu.scala 222:24]
    aluControl.io.funct7 <= ex_funct7 @[cpu.scala 223:24]
    controlTransfer.io.controltransferop <= id_ex_ctrl.io.data.ex_ctrl.controltransferop @[cpu.scala 226:40]
    node _T_11 = eq(ex_mem_ctrl.io.data.wb_ctrl.writeback_src, UInt<1>("h00")) @[cpu.scala 231:48]
    node _T_12 = eq(ex_mem_ctrl.io.data.wb_ctrl.writeback_src, UInt<1>("h01")) @[cpu.scala 232:48]
    node _T_13 = mux(_T_12, ex_mem.io.data.sextImm, UInt<1>("h00")) @[Mux.scala 87:16]
    node ex_result = mux(_T_11, ex_mem.io.data.alu_result, _T_13) @[Mux.scala 87:16]
    node _T_14 = eq(forwarding.io.forwardA, UInt<1>("h00")) @[cpu.scala 237:29]
    node _T_15 = eq(forwarding.io.forwardA, UInt<1>("h01")) @[cpu.scala 238:29]
    node _T_16 = eq(forwarding.io.forwardA, UInt<2>("h02")) @[cpu.scala 239:29]
    node _T_17 = mux(_T_16, registers.io.writedata, UInt<1>("h00")) @[Mux.scala 87:16]
    node _T_18 = mux(_T_15, ex_result, _T_17) @[Mux.scala 87:16]
    node forwarded_operand1 = mux(_T_14, id_ex.io.data.readdata1, _T_18) @[Mux.scala 87:16]
    node _T_19 = eq(forwarding.io.forwardB, UInt<1>("h00")) @[cpu.scala 243:29]
    node _T_20 = eq(forwarding.io.forwardB, UInt<1>("h01")) @[cpu.scala 244:29]
    node _T_21 = eq(forwarding.io.forwardB, UInt<2>("h02")) @[cpu.scala 245:29]
    node _T_22 = mux(_T_21, registers.io.writedata, UInt<1>("h00")) @[Mux.scala 87:16]
    node _T_23 = mux(_T_20, ex_result, _T_22) @[Mux.scala 87:16]
    node forwarded_operand2 = mux(_T_19, id_ex.io.data.readdata2, _T_23) @[Mux.scala 87:16]
    node _T_24 = eq(id_ex_ctrl.io.data.ex_ctrl.op1_src, UInt<1>("h00")) @[cpu.scala 250:41]
    node _T_25 = eq(id_ex_ctrl.io.data.ex_ctrl.op1_src, UInt<1>("h01")) @[cpu.scala 251:41]
    node _T_26 = mux(_T_25, id_ex.io.data.pc, UInt<1>("h00")) @[Mux.scala 87:16]
    node ex_operand1 = mux(_T_24, forwarded_operand1, _T_26) @[Mux.scala 87:16]
    node _T_27 = eq(id_ex_ctrl.io.data.ex_ctrl.op2_src, UInt<1>("h00")) @[cpu.scala 256:41]
    node _T_28 = eq(id_ex_ctrl.io.data.ex_ctrl.op2_src, UInt<1>("h01")) @[cpu.scala 257:41]
    node _T_29 = eq(id_ex_ctrl.io.data.ex_ctrl.op2_src, UInt<2>("h02")) @[cpu.scala 258:41]
    node _T_30 = mux(_T_29, id_ex.io.data.sextImm, UInt<1>("h00")) @[Mux.scala 87:16]
    node _T_31 = mux(_T_28, UInt<3>("h04"), _T_30) @[Mux.scala 87:16]
    node ex_operand2 = mux(_T_27, forwarded_operand2, _T_31) @[Mux.scala 87:16]
    alu.io.operation <= aluControl.io.operation @[cpu.scala 262:21]
    alu.io.operand1 <= ex_operand1 @[cpu.scala 265:19]
    alu.io.operand2 <= ex_operand2 @[cpu.scala 266:19]
    controlTransfer.io.operand1 <= forwarded_operand1 @[cpu.scala 269:31]
    controlTransfer.io.operand2 <= forwarded_operand2 @[cpu.scala 270:31]
    controlTransfer.io.pc <= id_ex.io.data.pc @[cpu.scala 271:31]
    controlTransfer.io.imm <= id_ex.io.data.sextImm @[cpu.scala 272:31]
    controlTransfer.io.funct3 <= ex_funct3 @[cpu.scala 273:31]
    ex_mem.io.in.instruction <= id_ex.io.data.instruction @[cpu.scala 277:30]
    ex_mem.io.in.mem_writedata <= forwarded_operand2 @[cpu.scala 278:30]
    ex_mem.io.in.nextpc <= controlTransfer.io.nextpc @[cpu.scala 279:23]
    ex_mem.io.in.taken <= controlTransfer.io.taken @[cpu.scala 280:23]
    ex_mem.io.in.alu_result <= alu.io.result @[cpu.scala 281:27]
    ex_mem.io.in.sextImm <= id_ex.io.data.sextImm @[cpu.scala 282:24]
    ex_mem_ctrl.io.in.mem_ctrl.memop <= id_ex_ctrl.io.data.mem_ctrl.memop @[cpu.scala 284:38]
    ex_mem_ctrl.io.in.wb_ctrl.writeback_valid <= id_ex_ctrl.io.data.wb_ctrl.writeback_valid @[cpu.scala 286:45]
    ex_mem_ctrl.io.in.wb_ctrl.writeback_src <= id_ex_ctrl.io.data.wb_ctrl.writeback_src @[cpu.scala 287:45]
    ex_mem.io.valid <= UInt<1>("h01") @[cpu.scala 290:24]
    ex_mem.io.flush <= hazard.io.ex_mem_flush @[cpu.scala 291:24]
    ex_mem_ctrl.io.valid <= UInt<1>("h01") @[cpu.scala 292:24]
    ex_mem_ctrl.io.flush <= hazard.io.ex_mem_flush @[cpu.scala 293:24]
    node mem_funct3 = bits(ex_mem.io.data.instruction, 14, 12) @[cpu.scala 299:46]
    io.dmem.address <= ex_mem.io.data.alu_result @[cpu.scala 302:21]
    node _T_32 = eq(ex_mem_ctrl.io.data.mem_ctrl.memop, UInt<1>("h01")) @[cpu.scala 303:59]
    io.dmem.memread <= _T_32 @[cpu.scala 303:21]
    node _T_33 = eq(ex_mem_ctrl.io.data.mem_ctrl.memop, UInt<2>("h02")) @[cpu.scala 304:59]
    io.dmem.memwrite <= _T_33 @[cpu.scala 304:21]
    node _T_34 = neq(ex_mem_ctrl.io.data.mem_ctrl.memop, UInt<1>("h00")) @[cpu.scala 305:59]
    io.dmem.valid <= _T_34 @[cpu.scala 305:21]
    node _T_35 = bits(mem_funct3, 1, 0) @[cpu.scala 306:34]
    io.dmem.maskmode <= _T_35 @[cpu.scala 306:21]
    node _T_36 = bits(mem_funct3, 2, 2) @[cpu.scala 307:35]
    node _T_37 = not(_T_36) @[cpu.scala 307:24]
    io.dmem.sext <= _T_37 @[cpu.scala 307:21]
    io.dmem.writedata <= ex_mem.io.data.mem_writedata @[cpu.scala 308:21]
    next_pc <= ex_mem.io.data.nextpc @[cpu.scala 311:11]
    hazard.io.exmem_taken <= ex_mem.io.data.taken @[cpu.scala 314:25]
    node _T_38 = bits(ex_mem.io.data.instruction, 11, 7) @[cpu.scala 317:54]
    forwarding.io.exmemrd <= _T_38 @[cpu.scala 317:25]
    forwarding.io.exmemrw <= ex_mem_ctrl.io.data.wb_ctrl.writeback_valid @[cpu.scala 318:25]
    mem_wb.io.in.mem_readdata <= io.dmem.readdata @[cpu.scala 322:29]
    mem_wb.io.in.alu_result <= ex_mem.io.data.alu_result @[cpu.scala 323:29]
    mem_wb.io.in.sextImm <= ex_mem.io.data.sextImm @[cpu.scala 324:29]
    mem_wb.io.in.instruction <= ex_mem.io.data.instruction @[cpu.scala 325:29]
    mem_wb_ctrl.io.in.wb_ctrl.writeback_valid <= ex_mem_ctrl.io.data.wb_ctrl.writeback_valid @[cpu.scala 327:45]
    mem_wb_ctrl.io.in.wb_ctrl.writeback_src <= ex_mem_ctrl.io.data.wb_ctrl.writeback_src @[cpu.scala 328:45]
    mem_wb.io.valid <= UInt<1>("h01") @[cpu.scala 331:24]
    mem_wb.io.flush <= UInt<1>("h00") @[cpu.scala 332:24]
    mem_wb_ctrl.io.valid <= UInt<1>("h01") @[cpu.scala 333:24]
    mem_wb_ctrl.io.flush <= UInt<1>("h00") @[cpu.scala 334:24]
    node wb_rd = bits(mem_wb.io.data.instruction, 11, 7) @[cpu.scala 341:41]
    registers.io.writereg <= wb_rd @[cpu.scala 344:25]
    node _T_39 = neq(wb_rd, UInt<1>("h00")) @[cpu.scala 347:30]
    node _T_40 = eq(mem_wb_ctrl.io.data.wb_ctrl.writeback_valid, UInt<1>("h01")) @[cpu.scala 347:86]
    node _T_41 = and(_T_39, _T_40) @[cpu.scala 347:39]
    registers.io.wen <= _T_41 @[cpu.scala 347:20]
    node _T_42 = eq(mem_wb_ctrl.io.data.wb_ctrl.writeback_src, UInt<1>("h00")) @[cpu.scala 351:48]
    node _T_43 = eq(mem_wb_ctrl.io.data.wb_ctrl.writeback_src, UInt<1>("h01")) @[cpu.scala 352:48]
    node _T_44 = eq(mem_wb_ctrl.io.data.wb_ctrl.writeback_src, UInt<2>("h02")) @[cpu.scala 353:48]
    node _T_45 = mux(_T_44, mem_wb.io.data.mem_readdata, UInt<1>("h00")) @[Mux.scala 87:16]
    node _T_46 = mux(_T_43, mem_wb.io.data.sextImm, _T_45) @[Mux.scala 87:16]
    node _T_47 = mux(_T_42, mem_wb.io.data.alu_result, _T_46) @[Mux.scala 87:16]
    registers.io.writedata <= _T_47 @[cpu.scala 350:26]
    node _T_48 = bits(mem_wb.io.data.instruction, 11, 7) @[cpu.scala 357:54]
    forwarding.io.memwbrd <= _T_48 @[cpu.scala 357:25]
    forwarding.io.memwbrw <= mem_wb_ctrl.io.data.wb_ctrl.writeback_valid @[cpu.scala 358:25]
    
  module DualPortedCombinMemory : 
    input clock : Clock
    input reset : Reset
    output io : {inst_io : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<64>, writedata : UInt<64>, operation : UInt<2>, dirty : UInt<1>, age : UInt<32>}}, response : {valid : UInt<1>, bits : {data : UInt<64>, dirty : UInt<1>, age : UInt<32>}}}, data_io : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<64>, writedata : UInt<64>, operation : UInt<2>, dirty : UInt<1>, age : UInt<32>}}, response : {valid : UInt<1>, bits : {data : UInt<64>, dirty : UInt<1>, age : UInt<32>}}}}
    
    io.inst_io.request.bits.age is invalid @[base-memory-components.scala 45:22]
    io.inst_io.request.bits.dirty is invalid @[base-memory-components.scala 45:22]
    io.inst_io.request.bits.operation is invalid @[base-memory-components.scala 45:22]
    io.inst_io.request.bits.writedata is invalid @[base-memory-components.scala 45:22]
    io.inst_io.request.bits.address is invalid @[base-memory-components.scala 45:22]
    io.inst_io.request.valid is invalid @[base-memory-components.scala 45:22]
    io.inst_io.request.ready is invalid @[base-memory-components.scala 45:22]
    io.data_io.request.bits.age is invalid @[base-memory-components.scala 46:22]
    io.data_io.request.bits.dirty is invalid @[base-memory-components.scala 46:22]
    io.data_io.request.bits.operation is invalid @[base-memory-components.scala 46:22]
    io.data_io.request.bits.writedata is invalid @[base-memory-components.scala 46:22]
    io.data_io.request.bits.address is invalid @[base-memory-components.scala 46:22]
    io.data_io.request.valid is invalid @[base-memory-components.scala 46:22]
    io.data_io.request.ready is invalid @[base-memory-components.scala 46:22]
    wire _T : {valid : UInt<1>, bits : {data : UInt<64>, dirty : UInt<1>, age : UInt<32>}} @[base-memory-components.scala 49:38]
    _T.bits.age <= UInt<32>("h00") @[base-memory-components.scala 49:38]
    _T.bits.dirty <= UInt<1>("h00") @[base-memory-components.scala 49:38]
    _T.bits.data <= UInt<64>("h00") @[base-memory-components.scala 49:38]
    _T.valid <= UInt<1>("h00") @[base-memory-components.scala 49:38]
    io.inst_io.response.bits.age <= _T.bits.age @[base-memory-components.scala 49:23]
    io.inst_io.response.bits.dirty <= _T.bits.dirty @[base-memory-components.scala 49:23]
    io.inst_io.response.bits.data <= _T.bits.data @[base-memory-components.scala 49:23]
    io.inst_io.response.valid <= _T.valid @[base-memory-components.scala 49:23]
    wire _T_1 : {valid : UInt<1>, bits : {data : UInt<64>, dirty : UInt<1>, age : UInt<32>}} @[base-memory-components.scala 50:38]
    _T_1.bits.age <= UInt<32>("h00") @[base-memory-components.scala 50:38]
    _T_1.bits.dirty <= UInt<1>("h00") @[base-memory-components.scala 50:38]
    _T_1.bits.data <= UInt<64>("h00") @[base-memory-components.scala 50:38]
    _T_1.valid <= UInt<1>("h00") @[base-memory-components.scala 50:38]
    io.data_io.response.bits.age <= _T_1.bits.age @[base-memory-components.scala 50:23]
    io.data_io.response.bits.dirty <= _T_1.bits.dirty @[base-memory-components.scala 50:23]
    io.data_io.response.bits.data <= _T_1.bits.data @[base-memory-components.scala 50:23]
    io.data_io.response.valid <= _T_1.valid @[base-memory-components.scala 50:23]
    cmem memory : UInt<32>[16384] @[base-memory-components.scala 52:19]
    io.inst_io.response.valid <= UInt<1>("h00") @[memory.scala 18:27]
    io.inst_io.request.ready <= UInt<1>("h01") @[memory.scala 20:26]
    when io.inst_io.request.valid : @[memory.scala 27:35]
      node _T_2 = eq(io.inst_io.request.bits.operation, UInt<1>("h00")) @[memory.scala 32:30]
      node _T_3 = asUInt(reset) @[memory.scala 32:11]
      node _T_4 = or(_T_2, _T_3) @[memory.scala 32:11]
      node _T_5 = eq(_T_4, UInt<1>("h00")) @[memory.scala 32:11]
      when _T_5 : @[memory.scala 32:11]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:32 assert(request.operation === Read)\n") @[memory.scala 32:11]
        stop(clock, UInt<1>(1), 1) @[memory.scala 32:11]
        skip @[memory.scala 32:11]
      node _T_6 = lt(io.inst_io.request.bits.address, UInt<17>("h010000")) @[memory.scala 37:27]
      when _T_6 : @[memory.scala 37:37]
        io.inst_io.response.valid <= UInt<1>("h01") @[memory.scala 38:33]
        node _T_7 = dshr(io.inst_io.request.bits.address, UInt<2>("h03")) @[memory.scala 39:42]
        node _T_8 = dshl(_T_7, UInt<1>("h01")) @[memory.scala 39:50]
        node _T_9 = add(_T_8, UInt<1>("h01")) @[memory.scala 40:63]
        node _T_10 = tail(_T_9, 1) @[memory.scala 40:63]
        node _T_11 = bits(_T_10, 13, 0) @[memory.scala 40:50]
        infer mport _T_12 = memory[_T_11], clock @[memory.scala 40:50]
        node _T_13 = bits(_T_8, 13, 0) @[memory.scala 40:77]
        infer mport _T_14 = memory[_T_13], clock @[memory.scala 40:77]
        node _T_15 = cat(_T_12, _T_14) @[Cat.scala 30:58]
        io.inst_io.response.bits.data <= _T_15 @[memory.scala 40:37]
        io.inst_io.response.bits.dirty <= UInt<1>("h00") @[memory.scala 41:38]
        io.inst_io.response.bits.age <= UInt<1>("h00") @[memory.scala 42:36]
        skip @[memory.scala 37:37]
      else : @[memory.scala 43:18]
        io.inst_io.response.valid <= UInt<1>("h00") @[memory.scala 44:33]
        skip @[memory.scala 43:18]
      skip @[memory.scala 27:35]
    else : @[memory.scala 46:16]
      io.inst_io.response.valid <= UInt<1>("h00") @[memory.scala 47:31]
      skip @[memory.scala 46:16]
    io.data_io.response.valid <= UInt<1>("h00") @[memory.scala 18:27]
    io.data_io.request.ready <= UInt<1>("h01") @[memory.scala 20:26]
    when io.data_io.request.valid : @[memory.scala 57:35]
      node _T_16 = neq(io.data_io.request.bits.operation, UInt<1>("h01")) @[memory.scala 61:31]
      node _T_17 = asUInt(reset) @[memory.scala 61:12]
      node _T_18 = or(_T_16, _T_17) @[memory.scala 61:12]
      node _T_19 = eq(_T_18, UInt<1>("h00")) @[memory.scala 61:12]
      when _T_19 : @[memory.scala 61:12]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:61 assert (request.operation =/= Write)\n") @[memory.scala 61:12]
        stop(clock, UInt<1>(1), 1) @[memory.scala 61:12]
        skip @[memory.scala 61:12]
      node _T_20 = lt(io.data_io.request.bits.address, UInt<17>("h010000")) @[memory.scala 63:29]
      node _T_21 = asUInt(reset) @[memory.scala 63:12]
      node _T_22 = or(_T_20, _T_21) @[memory.scala 63:12]
      node _T_23 = eq(_T_22, UInt<1>("h00")) @[memory.scala 63:12]
      when _T_23 : @[memory.scala 63:12]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:63 assert (request.address < size.U)\n") @[memory.scala 63:12]
        stop(clock, UInt<1>(1), 1) @[memory.scala 63:12]
        skip @[memory.scala 63:12]
      node _T_24 = dshr(io.data_io.request.bits.address, UInt<2>("h02")) @[memory.scala 66:34]
      node _T_25 = add(_T_24, UInt<1>("h01")) @[memory.scala 67:61]
      node _T_26 = tail(_T_25, 1) @[memory.scala 67:61]
      node _T_27 = bits(_T_26, 13, 0) @[memory.scala 67:48]
      infer mport _T_28 = memory[_T_27], clock @[memory.scala 67:48]
      node _T_29 = bits(_T_24, 13, 0) @[memory.scala 67:75]
      infer mport _T_30 = memory[_T_29], clock @[memory.scala 67:75]
      node _T_31 = cat(_T_28, _T_30) @[Cat.scala 30:58]
      io.data_io.response.bits.data <= _T_31 @[memory.scala 67:35]
      io.data_io.response.bits.dirty <= UInt<1>("h00") @[memory.scala 68:36]
      io.data_io.response.bits.age <= UInt<1>("h00") @[memory.scala 69:34]
      io.data_io.response.valid <= UInt<1>("h01") @[memory.scala 70:31]
      node _T_32 = eq(io.data_io.request.bits.operation, UInt<2>("h02")) @[memory.scala 73:29]
      when _T_32 : @[memory.scala 73:44]
        node _T_33 = shr(io.data_io.request.bits.address, 2) @[memory.scala 74:25]
        node _T_34 = bits(_T_33, 13, 0) @[memory.scala 74:13]
        infer mport _T_35 = memory[_T_34], clock @[memory.scala 74:13]
        node _T_36 = bits(io.data_io.request.bits.writedata, 31, 0) @[memory.scala 74:46]
        _T_35 <= _T_36 @[memory.scala 74:31]
        node _T_37 = shr(io.data_io.request.bits.address, 2) @[memory.scala 75:26]
        node _T_38 = add(_T_37, UInt<1>("h01")) @[memory.scala 75:32]
        node _T_39 = tail(_T_38, 1) @[memory.scala 75:32]
        node _T_40 = bits(_T_39, 13, 0) @[memory.scala 75:13]
        infer mport _T_41 = memory[_T_40], clock @[memory.scala 75:13]
        node _T_42 = bits(io.data_io.request.bits.writedata, 63, 32) @[memory.scala 75:54]
        _T_41 <= _T_42 @[memory.scala 75:39]
        skip @[memory.scala 73:44]
      else : @[memory.scala 77:16]
        skip @[memory.scala 77:16]
      skip @[memory.scala 57:35]
    else : @[memory.scala 79:16]
      io.data_io.response.valid <= UInt<1>("h00") @[memory.scala 80:31]
      skip @[memory.scala 79:16]
    
  module ICombinMemBridge : 
    input clock : Clock
    input reset : Reset
    output io : {cpu_side_io : {flip address : UInt<64>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<64>, ready : UInt<1>}, flip mem_side_io : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<64>, writedata : UInt<64>, operation : UInt<2>, dirty : UInt<1>, age : UInt<32>}}, response : {valid : UInt<1>, bits : {data : UInt<64>, dirty : UInt<1>, age : UInt<32>}}}}
    
    wire _T : {flip address : UInt<64>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<64>, ready : UInt<1>} @[base-memory-components.scala 65:34]
    _T.ready <= UInt<1>("h00") @[base-memory-components.scala 65:34]
    _T.instruction <= UInt<64>("h00") @[base-memory-components.scala 65:34]
    _T.good <= UInt<1>("h00") @[base-memory-components.scala 65:34]
    _T.valid <= UInt<1>("h00") @[base-memory-components.scala 65:34]
    _T.address <= UInt<64>("h00") @[base-memory-components.scala 65:34]
    io.cpu_side_io.ready <= _T.ready @[base-memory-components.scala 65:18]
    io.cpu_side_io.instruction <= _T.instruction @[base-memory-components.scala 65:18]
    io.cpu_side_io.good <= _T.good @[base-memory-components.scala 65:18]
    _T.valid <= io.cpu_side_io.valid @[base-memory-components.scala 65:18]
    _T.address <= io.cpu_side_io.address @[base-memory-components.scala 65:18]
    io.mem_side_io.response.bits.age is invalid @[base-memory-components.scala 70:23]
    io.mem_side_io.response.bits.dirty is invalid @[base-memory-components.scala 70:23]
    io.mem_side_io.response.bits.data is invalid @[base-memory-components.scala 70:23]
    io.mem_side_io.response.valid is invalid @[base-memory-components.scala 70:23]
    io.mem_side_io.request.bits.age is invalid @[base-memory-components.scala 70:23]
    io.mem_side_io.request.bits.dirty is invalid @[base-memory-components.scala 70:23]
    io.mem_side_io.request.bits.operation is invalid @[base-memory-components.scala 70:23]
    io.mem_side_io.request.bits.writedata is invalid @[base-memory-components.scala 70:23]
    io.mem_side_io.request.bits.address is invalid @[base-memory-components.scala 70:23]
    io.mem_side_io.request.valid is invalid @[base-memory-components.scala 70:23]
    io.mem_side_io.request.ready is invalid @[base-memory-components.scala 70:23]
    when io.cpu_side_io.valid : @[memory-combin-ports.scala 16:31]
      wire _T_1 : {address : UInt<64>, writedata : UInt<64>, operation : UInt<2>, dirty : UInt<1>, age : UInt<32>} @[memory-combin-ports.scala 17:23]
      _T_1.address <= io.cpu_side_io.address @[memory-combin-ports.scala 18:23]
      _T_1.operation <= UInt<1>("h00") @[memory-combin-ports.scala 19:23]
      _T_1.writedata <= UInt<1>("h00") @[memory-combin-ports.scala 20:23]
      _T_1.dirty <= UInt<1>("h00") @[memory-combin-ports.scala 21:23]
      _T_1.age <= UInt<1>("h00") @[memory-combin-ports.scala 22:23]
      io.mem_side_io.request.bits.age <= _T_1.age @[memory-combin-ports.scala 24:34]
      io.mem_side_io.request.bits.dirty <= _T_1.dirty @[memory-combin-ports.scala 24:34]
      io.mem_side_io.request.bits.operation <= _T_1.operation @[memory-combin-ports.scala 24:34]
      io.mem_side_io.request.bits.writedata <= _T_1.writedata @[memory-combin-ports.scala 24:34]
      io.mem_side_io.request.bits.address <= _T_1.address @[memory-combin-ports.scala 24:34]
      io.mem_side_io.request.valid <= UInt<1>("h01") @[memory-combin-ports.scala 25:34]
      skip @[memory-combin-ports.scala 16:31]
    else : @[memory-combin-ports.scala 26:16]
      io.mem_side_io.request.valid <= UInt<1>("h00") @[memory-combin-ports.scala 27:34]
      skip @[memory-combin-ports.scala 26:16]
    io.cpu_side_io.ready <= UInt<1>("h01") @[memory-combin-ports.scala 31:24]
    io.cpu_side_io.good <= UInt<1>("h01") @[memory-combin-ports.scala 34:23]
    io.cpu_side_io.instruction <= io.mem_side_io.response.bits.data @[memory-combin-ports.scala 35:30]
    
  module DCombinMemBridge : 
    input clock : Clock
    input reset : Reset
    output io : {cpu_side_io : {flip address : UInt<64>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<64>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<64>}, flip mem_side_io : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<64>, writedata : UInt<64>, operation : UInt<2>, dirty : UInt<1>, age : UInt<32>}}, response : {valid : UInt<1>, bits : {data : UInt<64>, dirty : UInt<1>, age : UInt<32>}}}}
    
    wire _T : {flip address : UInt<64>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<64>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<64>} @[base-memory-components.scala 82:34]
    _T.readdata <= UInt<64>("h00") @[base-memory-components.scala 82:34]
    _T.sext <= UInt<1>("h00") @[base-memory-components.scala 82:34]
    _T.maskmode <= UInt<2>("h00") @[base-memory-components.scala 82:34]
    _T.memwrite <= UInt<1>("h00") @[base-memory-components.scala 82:34]
    _T.memread <= UInt<1>("h00") @[base-memory-components.scala 82:34]
    _T.writedata <= UInt<64>("h00") @[base-memory-components.scala 82:34]
    _T.good <= UInt<1>("h00") @[base-memory-components.scala 82:34]
    _T.valid <= UInt<1>("h00") @[base-memory-components.scala 82:34]
    _T.address <= UInt<64>("h00") @[base-memory-components.scala 82:34]
    io.cpu_side_io.readdata <= _T.readdata @[base-memory-components.scala 82:18]
    _T.sext <= io.cpu_side_io.sext @[base-memory-components.scala 82:18]
    _T.maskmode <= io.cpu_side_io.maskmode @[base-memory-components.scala 82:18]
    _T.memwrite <= io.cpu_side_io.memwrite @[base-memory-components.scala 82:18]
    _T.memread <= io.cpu_side_io.memread @[base-memory-components.scala 82:18]
    _T.writedata <= io.cpu_side_io.writedata @[base-memory-components.scala 82:18]
    io.cpu_side_io.good <= _T.good @[base-memory-components.scala 82:18]
    _T.valid <= io.cpu_side_io.valid @[base-memory-components.scala 82:18]
    _T.address <= io.cpu_side_io.address @[base-memory-components.scala 82:18]
    io.mem_side_io.response.bits.age is invalid @[base-memory-components.scala 87:23]
    io.mem_side_io.response.bits.dirty is invalid @[base-memory-components.scala 87:23]
    io.mem_side_io.response.bits.data is invalid @[base-memory-components.scala 87:23]
    io.mem_side_io.response.valid is invalid @[base-memory-components.scala 87:23]
    io.mem_side_io.request.bits.age is invalid @[base-memory-components.scala 87:23]
    io.mem_side_io.request.bits.dirty is invalid @[base-memory-components.scala 87:23]
    io.mem_side_io.request.bits.operation is invalid @[base-memory-components.scala 87:23]
    io.mem_side_io.request.bits.writedata is invalid @[base-memory-components.scala 87:23]
    io.mem_side_io.request.bits.address is invalid @[base-memory-components.scala 87:23]
    io.mem_side_io.request.valid is invalid @[base-memory-components.scala 87:23]
    io.mem_side_io.request.ready is invalid @[base-memory-components.scala 87:23]
    io.cpu_side_io.good <= io.mem_side_io.response.valid @[base-memory-components.scala 89:23]
    io.cpu_side_io.good <= UInt<1>("h01") @[memory-combin-ports.scala 44:23]
    node _T_1 = or(io.cpu_side_io.memread, io.cpu_side_io.memwrite) @[memory-combin-ports.scala 46:57]
    node _T_2 = and(io.cpu_side_io.valid, _T_1) @[memory-combin-ports.scala 46:30]
    when _T_2 : @[memory-combin-ports.scala 46:86]
      node _T_3 = and(io.cpu_side_io.memread, io.cpu_side_io.memwrite) @[memory-combin-ports.scala 48:37]
      node _T_4 = eq(_T_3, UInt<1>("h00")) @[memory-combin-ports.scala 48:12]
      node _T_5 = asUInt(reset) @[memory-combin-ports.scala 48:11]
      node _T_6 = or(_T_4, _T_5) @[memory-combin-ports.scala 48:11]
      node _T_7 = eq(_T_6, UInt<1>("h00")) @[memory-combin-ports.scala 48:11]
      when _T_7 : @[memory-combin-ports.scala 48:11]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory-combin-ports.scala:48 assert(!(io.cpu_side_io.memread && io.cpu_side_io.memwrite))\n") @[memory-combin-ports.scala 48:11]
        stop(clock, UInt<1>(1), 1) @[memory-combin-ports.scala 48:11]
        skip @[memory-combin-ports.scala 48:11]
      io.mem_side_io.request.bits.address <= io.cpu_side_io.address @[memory-combin-ports.scala 50:41]
      io.mem_side_io.request.valid <= UInt<1>("h01") @[memory-combin-ports.scala 51:34]
      when io.cpu_side_io.memwrite : @[memory-combin-ports.scala 53:36]
        io.mem_side_io.request.bits.operation <= UInt<2>("h02") @[memory-combin-ports.scala 62:45]
        skip @[memory-combin-ports.scala 53:36]
      else : @[memory-combin-ports.scala 63:18]
        io.mem_side_io.request.bits.operation <= UInt<1>("h00") @[memory-combin-ports.scala 65:45]
        io.mem_side_io.request.bits.dirty <= UInt<1>("h00") @[memory-combin-ports.scala 67:41]
        io.mem_side_io.request.bits.age <= UInt<1>("h00") @[memory-combin-ports.scala 68:41]
        skip @[memory-combin-ports.scala 63:18]
      skip @[memory-combin-ports.scala 46:86]
    else : @[memory-combin-ports.scala 70:16]
      io.mem_side_io.request.valid <= UInt<1>("h00") @[memory-combin-ports.scala 72:34]
      skip @[memory-combin-ports.scala 70:16]
    when io.mem_side_io.response.valid : @[memory-combin-ports.scala 76:40]
      when io.cpu_side_io.memwrite : @[memory-combin-ports.scala 77:36]
        wire _T_8 : UInt<64> @[memory-combin-ports.scala 79:28]
        node _T_9 = neq(io.cpu_side_io.maskmode, UInt<2>("h03")) @[memory-combin-ports.scala 82:37]
        when _T_9 : @[memory-combin-ports.scala 82:46]
          node _T_10 = bits(io.cpu_side_io.address, 1, 0) @[memory-combin-ports.scala 84:44]
          wire _T_11 : UInt<64> @[memory-combin-ports.scala 85:28]
          wire _T_12 : UInt<64> @[memory-combin-ports.scala 86:34]
          wire _T_13 : UInt<64> @[memory-combin-ports.scala 87:42]
          wire _T_14 : UInt<64> @[memory-combin-ports.scala 88:37]
          wire _T_15 : UInt<64> @[memory-combin-ports.scala 89:33]
          _T_11 <= io.mem_side_io.response.bits.data @[memory-combin-ports.scala 91:18]
          node _T_16 = eq(io.cpu_side_io.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 93:39]
          when _T_16 : @[memory-combin-ports.scala 93:48]
            node _T_17 = mux(UInt<1>("h00"), UInt<56>("h0ffffffffffffff"), UInt<56>("h00")) @[Bitwise.scala 72:12]
            node _T_18 = mux(UInt<1>("h01"), UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
            node _T_19 = cat(_T_17, _T_18) @[Cat.scala 30:58]
            _T_12 <= _T_19 @[memory-combin-ports.scala 94:26]
            skip @[memory-combin-ports.scala 93:48]
          else : @[memory-combin-ports.scala 95:55]
            node _T_20 = eq(io.cpu_side_io.maskmode, UInt<1>("h01")) @[memory-combin-ports.scala 95:46]
            when _T_20 : @[memory-combin-ports.scala 95:55]
              node _T_21 = mux(UInt<1>("h00"), UInt<48>("h0ffffffffffff"), UInt<48>("h00")) @[Bitwise.scala 72:12]
              node _T_22 = mux(UInt<1>("h01"), UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
              node _T_23 = cat(_T_21, _T_22) @[Cat.scala 30:58]
              _T_12 <= _T_23 @[memory-combin-ports.scala 96:26]
              skip @[memory-combin-ports.scala 95:55]
            else : @[memory-combin-ports.scala 97:55]
              node _T_24 = eq(io.cpu_side_io.maskmode, UInt<2>("h02")) @[memory-combin-ports.scala 97:46]
              when _T_24 : @[memory-combin-ports.scala 97:55]
                node _T_25 = mux(UInt<1>("h00"), UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                node _T_26 = mux(UInt<1>("h01"), UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                node _T_27 = cat(_T_25, _T_26) @[Cat.scala 30:58]
                _T_12 <= _T_27 @[memory-combin-ports.scala 98:26]
                skip @[memory-combin-ports.scala 97:55]
              else : @[memory-combin-ports.scala 99:22]
                node _T_28 = mux(UInt<1>("h01"), UInt<64>("h0ffffffffffffffff"), UInt<64>("h00")) @[Bitwise.scala 72:12]
                _T_12 <= _T_28 @[memory-combin-ports.scala 100:26]
                skip @[memory-combin-ports.scala 99:22]
          node _T_29 = mul(_T_10, UInt<4>("h08")) @[memory-combin-ports.scala 103:61]
          node _T_30 = dshl(_T_12, _T_29) @[memory-combin-ports.scala 103:50]
          _T_13 <= _T_30 @[memory-combin-ports.scala 103:32]
          node _T_31 = mul(_T_10, UInt<4>("h08")) @[memory-combin-ports.scala 104:66]
          node _T_32 = dshl(io.cpu_side_io.writedata, _T_31) @[memory-combin-ports.scala 104:55]
          _T_14 <= _T_32 @[memory-combin-ports.scala 104:27]
          node _T_33 = not(_T_13) @[memory-combin-ports.scala 107:26]
          _T_15 <= _T_33 @[memory-combin-ports.scala 107:23]
          node _T_34 = and(_T_11, _T_15) @[memory-combin-ports.scala 109:32]
          node _T_35 = and(_T_14, _T_13) @[memory-combin-ports.scala 109:70]
          node _T_36 = or(_T_34, _T_35) @[memory-combin-ports.scala 109:49]
          _T_8 <= _T_36 @[memory-combin-ports.scala 109:19]
          skip @[memory-combin-ports.scala 82:46]
        else : @[memory-combin-ports.scala 110:20]
          _T_8 <= io.cpu_side_io.writedata @[memory-combin-ports.scala 111:19]
          skip @[memory-combin-ports.scala 110:20]
        io.mem_side_io.request.bits.writedata <= _T_8 @[memory-combin-ports.scala 114:45]
        skip @[memory-combin-ports.scala 77:36]
      else : @[memory-combin-ports.scala 115:42]
        when io.cpu_side_io.memread : @[memory-combin-ports.scala 115:42]
          wire _T_37 : UInt<64> @[memory-combin-ports.scala 117:36]
          wire _T_38 : UInt<64> @[memory-combin-ports.scala 118:36]
          node _T_39 = bits(io.cpu_side_io.address, 1, 0) @[memory-combin-ports.scala 120:42]
          node _T_40 = eq(io.cpu_side_io.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 121:37]
          when _T_40 : @[memory-combin-ports.scala 121:46]
            node _T_41 = mul(_T_39, UInt<4>("h08")) @[memory-combin-ports.scala 123:72]
            node _T_42 = dshr(io.mem_side_io.response.bits.data, _T_41) @[memory-combin-ports.scala 123:61]
            node _T_43 = and(_T_42, UInt<8>("h0ff")) @[memory-combin-ports.scala 123:80]
            _T_37 <= _T_43 @[memory-combin-ports.scala 123:23]
            skip @[memory-combin-ports.scala 121:46]
          else : @[memory-combin-ports.scala 124:53]
            node _T_44 = eq(io.cpu_side_io.maskmode, UInt<1>("h01")) @[memory-combin-ports.scala 124:44]
            when _T_44 : @[memory-combin-ports.scala 124:53]
              node _T_45 = mul(_T_39, UInt<4>("h08")) @[memory-combin-ports.scala 126:72]
              node _T_46 = dshr(io.mem_side_io.response.bits.data, _T_45) @[memory-combin-ports.scala 126:61]
              node _T_47 = and(_T_46, UInt<16>("h0ffff")) @[memory-combin-ports.scala 126:80]
              _T_37 <= _T_47 @[memory-combin-ports.scala 126:23]
              skip @[memory-combin-ports.scala 124:53]
            else : @[memory-combin-ports.scala 127:53]
              node _T_48 = eq(io.cpu_side_io.maskmode, UInt<2>("h02")) @[memory-combin-ports.scala 127:44]
              when _T_48 : @[memory-combin-ports.scala 127:53]
                node _T_49 = mul(_T_39, UInt<4>("h08")) @[memory-combin-ports.scala 129:72]
                node _T_50 = dshr(io.mem_side_io.response.bits.data, _T_49) @[memory-combin-ports.scala 129:61]
                node _T_51 = and(_T_50, UInt<32>("h0ffffffff")) @[memory-combin-ports.scala 129:80]
                _T_37 <= _T_51 @[memory-combin-ports.scala 129:23]
                skip @[memory-combin-ports.scala 127:53]
              else : @[memory-combin-ports.scala 130:20]
                _T_37 <= io.mem_side_io.response.bits.data @[memory-combin-ports.scala 132:23]
                skip @[memory-combin-ports.scala 130:20]
          when io.cpu_side_io.sext : @[memory-combin-ports.scala 135:34]
            node _T_52 = eq(io.cpu_side_io.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 136:39]
            when _T_52 : @[memory-combin-ports.scala 136:48]
              node _T_53 = bits(_T_37, 7, 7) @[memory-combin-ports.scala 138:59]
              node _T_54 = bits(_T_53, 0, 0) @[Bitwise.scala 72:15]
              node _T_55 = mux(_T_54, UInt<56>("h0ffffffffffffff"), UInt<56>("h00")) @[Bitwise.scala 72:12]
              node _T_56 = bits(_T_37, 7, 0) @[memory-combin-ports.scala 138:79]
              node _T_57 = cat(_T_55, _T_56) @[Cat.scala 30:58]
              _T_38 <= _T_57 @[memory-combin-ports.scala 138:30]
              skip @[memory-combin-ports.scala 136:48]
            else : @[memory-combin-ports.scala 139:55]
              node _T_58 = eq(io.cpu_side_io.maskmode, UInt<1>("h01")) @[memory-combin-ports.scala 139:46]
              when _T_58 : @[memory-combin-ports.scala 139:55]
                node _T_59 = bits(_T_37, 15, 15) @[memory-combin-ports.scala 141:59]
                node _T_60 = bits(_T_59, 0, 0) @[Bitwise.scala 72:15]
                node _T_61 = mux(_T_60, UInt<48>("h0ffffffffffff"), UInt<48>("h00")) @[Bitwise.scala 72:12]
                node _T_62 = bits(_T_37, 15, 0) @[memory-combin-ports.scala 141:79]
                node _T_63 = cat(_T_61, _T_62) @[Cat.scala 30:58]
                _T_38 <= _T_63 @[memory-combin-ports.scala 141:30]
                skip @[memory-combin-ports.scala 139:55]
              else : @[memory-combin-ports.scala 142:55]
                node _T_64 = eq(io.cpu_side_io.maskmode, UInt<2>("h02")) @[memory-combin-ports.scala 142:46]
                when _T_64 : @[memory-combin-ports.scala 142:55]
                  node _T_65 = bits(_T_37, 31, 31) @[memory-combin-ports.scala 144:59]
                  node _T_66 = bits(_T_65, 0, 0) @[Bitwise.scala 72:15]
                  node _T_67 = mux(_T_66, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
                  node _T_68 = bits(_T_37, 31, 0) @[memory-combin-ports.scala 144:79]
                  node _T_69 = cat(_T_67, _T_68) @[Cat.scala 30:58]
                  _T_38 <= _T_69 @[memory-combin-ports.scala 144:30]
                  skip @[memory-combin-ports.scala 142:55]
                else : @[memory-combin-ports.scala 145:22]
                  _T_38 <= _T_37 @[memory-combin-ports.scala 147:30]
                  skip @[memory-combin-ports.scala 145:22]
            skip @[memory-combin-ports.scala 135:34]
          else : @[memory-combin-ports.scala 149:20]
            _T_38 <= _T_37 @[memory-combin-ports.scala 150:28]
            skip @[memory-combin-ports.scala 149:20]
          io.cpu_side_io.readdata <= _T_38 @[memory-combin-ports.scala 153:31]
          skip @[memory-combin-ports.scala 115:42]
      skip @[memory-combin-ports.scala 76:40]
    
  module Top : 
    input clock : Clock
    input reset : UInt<1>
    output io : {success : UInt<1>}
    
    io.success is invalid @[top.scala 12:14]
    inst cpu of PipelinedCPU @[top.scala 16:20]
    cpu.clock <= clock
    cpu.reset <= reset
    inst mem of DualPortedCombinMemory @[top.scala 18:20]
    mem.clock <= clock
    mem.reset <= reset
    inst inst_bridge of ICombinMemBridge @[top.scala 20:27]
    inst_bridge.clock <= clock
    inst_bridge.reset <= reset
    inst data_bridge of DCombinMemBridge @[top.scala 21:27]
    data_bridge.clock <= clock
    data_bridge.reset <= reset
    cpu.io.imem.ready <= inst_bridge.io.cpu_side_io.ready @[top.scala 25:15]
    cpu.io.imem.instruction <= inst_bridge.io.cpu_side_io.instruction @[top.scala 25:15]
    cpu.io.imem.good <= inst_bridge.io.cpu_side_io.good @[top.scala 25:15]
    inst_bridge.io.cpu_side_io.valid <= cpu.io.imem.valid @[top.scala 25:15]
    inst_bridge.io.cpu_side_io.address <= cpu.io.imem.address @[top.scala 25:15]
    cpu.io.dmem.readdata <= data_bridge.io.cpu_side_io.readdata @[top.scala 26:15]
    data_bridge.io.cpu_side_io.sext <= cpu.io.dmem.sext @[top.scala 26:15]
    data_bridge.io.cpu_side_io.maskmode <= cpu.io.dmem.maskmode @[top.scala 26:15]
    data_bridge.io.cpu_side_io.memwrite <= cpu.io.dmem.memwrite @[top.scala 26:15]
    data_bridge.io.cpu_side_io.memread <= cpu.io.dmem.memread @[top.scala 26:15]
    data_bridge.io.cpu_side_io.writedata <= cpu.io.dmem.writedata @[top.scala 26:15]
    cpu.io.dmem.good <= data_bridge.io.cpu_side_io.good @[top.scala 26:15]
    data_bridge.io.cpu_side_io.valid <= cpu.io.dmem.valid @[top.scala 26:15]
    data_bridge.io.cpu_side_io.address <= cpu.io.dmem.address @[top.scala 26:15]
    mem.io.inst_io.request.bits.age <= inst_bridge.io.mem_side_io.request.bits.age @[base-memory-components.scala 16:29]
    mem.io.inst_io.request.bits.dirty <= inst_bridge.io.mem_side_io.request.bits.dirty @[base-memory-components.scala 16:29]
    mem.io.inst_io.request.bits.operation <= inst_bridge.io.mem_side_io.request.bits.operation @[base-memory-components.scala 16:29]
    mem.io.inst_io.request.bits.writedata <= inst_bridge.io.mem_side_io.request.bits.writedata @[base-memory-components.scala 16:29]
    mem.io.inst_io.request.bits.address <= inst_bridge.io.mem_side_io.request.bits.address @[base-memory-components.scala 16:29]
    mem.io.inst_io.request.valid <= inst_bridge.io.mem_side_io.request.valid @[base-memory-components.scala 16:29]
    inst_bridge.io.mem_side_io.request.ready <= mem.io.inst_io.request.ready @[base-memory-components.scala 16:29]
    inst_bridge.io.mem_side_io.response.bits.age <= mem.io.inst_io.response.bits.age @[base-memory-components.scala 17:41]
    inst_bridge.io.mem_side_io.response.bits.dirty <= mem.io.inst_io.response.bits.dirty @[base-memory-components.scala 17:41]
    inst_bridge.io.mem_side_io.response.bits.data <= mem.io.inst_io.response.bits.data @[base-memory-components.scala 17:41]
    inst_bridge.io.mem_side_io.response.valid <= mem.io.inst_io.response.valid @[base-memory-components.scala 17:41]
    mem.io.data_io.request.bits.age <= data_bridge.io.mem_side_io.request.bits.age @[base-memory-components.scala 22:29]
    mem.io.data_io.request.bits.dirty <= data_bridge.io.mem_side_io.request.bits.dirty @[base-memory-components.scala 22:29]
    mem.io.data_io.request.bits.operation <= data_bridge.io.mem_side_io.request.bits.operation @[base-memory-components.scala 22:29]
    mem.io.data_io.request.bits.writedata <= data_bridge.io.mem_side_io.request.bits.writedata @[base-memory-components.scala 22:29]
    mem.io.data_io.request.bits.address <= data_bridge.io.mem_side_io.request.bits.address @[base-memory-components.scala 22:29]
    mem.io.data_io.request.valid <= data_bridge.io.mem_side_io.request.valid @[base-memory-components.scala 22:29]
    data_bridge.io.mem_side_io.request.ready <= mem.io.data_io.request.ready @[base-memory-components.scala 22:29]
    data_bridge.io.mem_side_io.response.bits.age <= mem.io.data_io.response.bits.age @[base-memory-components.scala 23:41]
    data_bridge.io.mem_side_io.response.bits.dirty <= mem.io.data_io.response.bits.dirty @[base-memory-components.scala 23:41]
    data_bridge.io.mem_side_io.response.bits.data <= mem.io.data_io.response.bits.data @[base-memory-components.scala 23:41]
    data_bridge.io.mem_side_io.response.valid <= mem.io.data_io.response.valid @[base-memory-components.scala 23:41]
    
